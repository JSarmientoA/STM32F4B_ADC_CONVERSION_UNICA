
P9_ADC_CONVERSION_UNICA.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001aec  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b0  08001cbc  08001cbc  00011cbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001d6c  08001d6c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001d6c  08001d6c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001d6c  08001d6c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001d6c  08001d6c  00011d6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001d70  08001d70  00011d70  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001d74  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000064  08001dd8  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08001dd8  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001307  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000005a8  00000000  00000000  0002139b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000188  00000000  00000000  00021948  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000130  00000000  00000000  00021ad0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001aa4e  00000000  00000000  00021c00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001f04  00000000  00000000  0003c64e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000907a2  00000000  00000000  0003e552  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000cecf4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000d88  00000000  00000000  000ced44  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001ca4 	.word	0x08001ca4

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	08001ca4 	.word	0x08001ca4

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_dmul>:
 80002b0:	b570      	push	{r4, r5, r6, lr}
 80002b2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80002b6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80002ba:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80002be:	bf1d      	ittte	ne
 80002c0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80002c4:	ea94 0f0c 	teqne	r4, ip
 80002c8:	ea95 0f0c 	teqne	r5, ip
 80002cc:	f000 f8de 	bleq	800048c <__aeabi_dmul+0x1dc>
 80002d0:	442c      	add	r4, r5
 80002d2:	ea81 0603 	eor.w	r6, r1, r3
 80002d6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80002da:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80002de:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80002e2:	bf18      	it	ne
 80002e4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80002e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80002ec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80002f0:	d038      	beq.n	8000364 <__aeabi_dmul+0xb4>
 80002f2:	fba0 ce02 	umull	ip, lr, r0, r2
 80002f6:	f04f 0500 	mov.w	r5, #0
 80002fa:	fbe1 e502 	umlal	lr, r5, r1, r2
 80002fe:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000302:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000306:	f04f 0600 	mov.w	r6, #0
 800030a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800030e:	f09c 0f00 	teq	ip, #0
 8000312:	bf18      	it	ne
 8000314:	f04e 0e01 	orrne.w	lr, lr, #1
 8000318:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800031c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000320:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000324:	d204      	bcs.n	8000330 <__aeabi_dmul+0x80>
 8000326:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800032a:	416d      	adcs	r5, r5
 800032c:	eb46 0606 	adc.w	r6, r6, r6
 8000330:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000334:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000338:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800033c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000340:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000344:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000348:	bf88      	it	hi
 800034a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800034e:	d81e      	bhi.n	800038e <__aeabi_dmul+0xde>
 8000350:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000354:	bf08      	it	eq
 8000356:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800035a:	f150 0000 	adcs.w	r0, r0, #0
 800035e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000362:	bd70      	pop	{r4, r5, r6, pc}
 8000364:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000368:	ea46 0101 	orr.w	r1, r6, r1
 800036c:	ea40 0002 	orr.w	r0, r0, r2
 8000370:	ea81 0103 	eor.w	r1, r1, r3
 8000374:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000378:	bfc2      	ittt	gt
 800037a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800037e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000382:	bd70      	popgt	{r4, r5, r6, pc}
 8000384:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000388:	f04f 0e00 	mov.w	lr, #0
 800038c:	3c01      	subs	r4, #1
 800038e:	f300 80ab 	bgt.w	80004e8 <__aeabi_dmul+0x238>
 8000392:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000396:	bfde      	ittt	le
 8000398:	2000      	movle	r0, #0
 800039a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800039e:	bd70      	pople	{r4, r5, r6, pc}
 80003a0:	f1c4 0400 	rsb	r4, r4, #0
 80003a4:	3c20      	subs	r4, #32
 80003a6:	da35      	bge.n	8000414 <__aeabi_dmul+0x164>
 80003a8:	340c      	adds	r4, #12
 80003aa:	dc1b      	bgt.n	80003e4 <__aeabi_dmul+0x134>
 80003ac:	f104 0414 	add.w	r4, r4, #20
 80003b0:	f1c4 0520 	rsb	r5, r4, #32
 80003b4:	fa00 f305 	lsl.w	r3, r0, r5
 80003b8:	fa20 f004 	lsr.w	r0, r0, r4
 80003bc:	fa01 f205 	lsl.w	r2, r1, r5
 80003c0:	ea40 0002 	orr.w	r0, r0, r2
 80003c4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80003c8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80003cc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003d0:	fa21 f604 	lsr.w	r6, r1, r4
 80003d4:	eb42 0106 	adc.w	r1, r2, r6
 80003d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003dc:	bf08      	it	eq
 80003de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003e2:	bd70      	pop	{r4, r5, r6, pc}
 80003e4:	f1c4 040c 	rsb	r4, r4, #12
 80003e8:	f1c4 0520 	rsb	r5, r4, #32
 80003ec:	fa00 f304 	lsl.w	r3, r0, r4
 80003f0:	fa20 f005 	lsr.w	r0, r0, r5
 80003f4:	fa01 f204 	lsl.w	r2, r1, r4
 80003f8:	ea40 0002 	orr.w	r0, r0, r2
 80003fc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000400:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000404:	f141 0100 	adc.w	r1, r1, #0
 8000408:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800040c:	bf08      	it	eq
 800040e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000412:	bd70      	pop	{r4, r5, r6, pc}
 8000414:	f1c4 0520 	rsb	r5, r4, #32
 8000418:	fa00 f205 	lsl.w	r2, r0, r5
 800041c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000420:	fa20 f304 	lsr.w	r3, r0, r4
 8000424:	fa01 f205 	lsl.w	r2, r1, r5
 8000428:	ea43 0302 	orr.w	r3, r3, r2
 800042c:	fa21 f004 	lsr.w	r0, r1, r4
 8000430:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000434:	fa21 f204 	lsr.w	r2, r1, r4
 8000438:	ea20 0002 	bic.w	r0, r0, r2
 800043c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000440:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000444:	bf08      	it	eq
 8000446:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800044a:	bd70      	pop	{r4, r5, r6, pc}
 800044c:	f094 0f00 	teq	r4, #0
 8000450:	d10f      	bne.n	8000472 <__aeabi_dmul+0x1c2>
 8000452:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000456:	0040      	lsls	r0, r0, #1
 8000458:	eb41 0101 	adc.w	r1, r1, r1
 800045c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000460:	bf08      	it	eq
 8000462:	3c01      	subeq	r4, #1
 8000464:	d0f7      	beq.n	8000456 <__aeabi_dmul+0x1a6>
 8000466:	ea41 0106 	orr.w	r1, r1, r6
 800046a:	f095 0f00 	teq	r5, #0
 800046e:	bf18      	it	ne
 8000470:	4770      	bxne	lr
 8000472:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000476:	0052      	lsls	r2, r2, #1
 8000478:	eb43 0303 	adc.w	r3, r3, r3
 800047c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000480:	bf08      	it	eq
 8000482:	3d01      	subeq	r5, #1
 8000484:	d0f7      	beq.n	8000476 <__aeabi_dmul+0x1c6>
 8000486:	ea43 0306 	orr.w	r3, r3, r6
 800048a:	4770      	bx	lr
 800048c:	ea94 0f0c 	teq	r4, ip
 8000490:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000494:	bf18      	it	ne
 8000496:	ea95 0f0c 	teqne	r5, ip
 800049a:	d00c      	beq.n	80004b6 <__aeabi_dmul+0x206>
 800049c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80004a0:	bf18      	it	ne
 80004a2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80004a6:	d1d1      	bne.n	800044c <__aeabi_dmul+0x19c>
 80004a8:	ea81 0103 	eor.w	r1, r1, r3
 80004ac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004b0:	f04f 0000 	mov.w	r0, #0
 80004b4:	bd70      	pop	{r4, r5, r6, pc}
 80004b6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80004ba:	bf06      	itte	eq
 80004bc:	4610      	moveq	r0, r2
 80004be:	4619      	moveq	r1, r3
 80004c0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80004c4:	d019      	beq.n	80004fa <__aeabi_dmul+0x24a>
 80004c6:	ea94 0f0c 	teq	r4, ip
 80004ca:	d102      	bne.n	80004d2 <__aeabi_dmul+0x222>
 80004cc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80004d0:	d113      	bne.n	80004fa <__aeabi_dmul+0x24a>
 80004d2:	ea95 0f0c 	teq	r5, ip
 80004d6:	d105      	bne.n	80004e4 <__aeabi_dmul+0x234>
 80004d8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80004dc:	bf1c      	itt	ne
 80004de:	4610      	movne	r0, r2
 80004e0:	4619      	movne	r1, r3
 80004e2:	d10a      	bne.n	80004fa <__aeabi_dmul+0x24a>
 80004e4:	ea81 0103 	eor.w	r1, r1, r3
 80004e8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004ec:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd70      	pop	{r4, r5, r6, pc}
 80004fa:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80004fe:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000502:	bd70      	pop	{r4, r5, r6, pc}

08000504 <__aeabi_drsub>:
 8000504:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000508:	e002      	b.n	8000510 <__adddf3>
 800050a:	bf00      	nop

0800050c <__aeabi_dsub>:
 800050c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000510 <__adddf3>:
 8000510:	b530      	push	{r4, r5, lr}
 8000512:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000516:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800051a:	ea94 0f05 	teq	r4, r5
 800051e:	bf08      	it	eq
 8000520:	ea90 0f02 	teqeq	r0, r2
 8000524:	bf1f      	itttt	ne
 8000526:	ea54 0c00 	orrsne.w	ip, r4, r0
 800052a:	ea55 0c02 	orrsne.w	ip, r5, r2
 800052e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000532:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000536:	f000 80e2 	beq.w	80006fe <__adddf3+0x1ee>
 800053a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800053e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000542:	bfb8      	it	lt
 8000544:	426d      	neglt	r5, r5
 8000546:	dd0c      	ble.n	8000562 <__adddf3+0x52>
 8000548:	442c      	add	r4, r5
 800054a:	ea80 0202 	eor.w	r2, r0, r2
 800054e:	ea81 0303 	eor.w	r3, r1, r3
 8000552:	ea82 0000 	eor.w	r0, r2, r0
 8000556:	ea83 0101 	eor.w	r1, r3, r1
 800055a:	ea80 0202 	eor.w	r2, r0, r2
 800055e:	ea81 0303 	eor.w	r3, r1, r3
 8000562:	2d36      	cmp	r5, #54	; 0x36
 8000564:	bf88      	it	hi
 8000566:	bd30      	pophi	{r4, r5, pc}
 8000568:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800056c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000570:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000574:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000578:	d002      	beq.n	8000580 <__adddf3+0x70>
 800057a:	4240      	negs	r0, r0
 800057c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000580:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000584:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000588:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800058c:	d002      	beq.n	8000594 <__adddf3+0x84>
 800058e:	4252      	negs	r2, r2
 8000590:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000594:	ea94 0f05 	teq	r4, r5
 8000598:	f000 80a7 	beq.w	80006ea <__adddf3+0x1da>
 800059c:	f1a4 0401 	sub.w	r4, r4, #1
 80005a0:	f1d5 0e20 	rsbs	lr, r5, #32
 80005a4:	db0d      	blt.n	80005c2 <__adddf3+0xb2>
 80005a6:	fa02 fc0e 	lsl.w	ip, r2, lr
 80005aa:	fa22 f205 	lsr.w	r2, r2, r5
 80005ae:	1880      	adds	r0, r0, r2
 80005b0:	f141 0100 	adc.w	r1, r1, #0
 80005b4:	fa03 f20e 	lsl.w	r2, r3, lr
 80005b8:	1880      	adds	r0, r0, r2
 80005ba:	fa43 f305 	asr.w	r3, r3, r5
 80005be:	4159      	adcs	r1, r3
 80005c0:	e00e      	b.n	80005e0 <__adddf3+0xd0>
 80005c2:	f1a5 0520 	sub.w	r5, r5, #32
 80005c6:	f10e 0e20 	add.w	lr, lr, #32
 80005ca:	2a01      	cmp	r2, #1
 80005cc:	fa03 fc0e 	lsl.w	ip, r3, lr
 80005d0:	bf28      	it	cs
 80005d2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80005d6:	fa43 f305 	asr.w	r3, r3, r5
 80005da:	18c0      	adds	r0, r0, r3
 80005dc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80005e0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005e4:	d507      	bpl.n	80005f6 <__adddf3+0xe6>
 80005e6:	f04f 0e00 	mov.w	lr, #0
 80005ea:	f1dc 0c00 	rsbs	ip, ip, #0
 80005ee:	eb7e 0000 	sbcs.w	r0, lr, r0
 80005f2:	eb6e 0101 	sbc.w	r1, lr, r1
 80005f6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80005fa:	d31b      	bcc.n	8000634 <__adddf3+0x124>
 80005fc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000600:	d30c      	bcc.n	800061c <__adddf3+0x10c>
 8000602:	0849      	lsrs	r1, r1, #1
 8000604:	ea5f 0030 	movs.w	r0, r0, rrx
 8000608:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800060c:	f104 0401 	add.w	r4, r4, #1
 8000610:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000614:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000618:	f080 809a 	bcs.w	8000750 <__adddf3+0x240>
 800061c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000620:	bf08      	it	eq
 8000622:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000626:	f150 0000 	adcs.w	r0, r0, #0
 800062a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800062e:	ea41 0105 	orr.w	r1, r1, r5
 8000632:	bd30      	pop	{r4, r5, pc}
 8000634:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000638:	4140      	adcs	r0, r0
 800063a:	eb41 0101 	adc.w	r1, r1, r1
 800063e:	3c01      	subs	r4, #1
 8000640:	bf28      	it	cs
 8000642:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000646:	d2e9      	bcs.n	800061c <__adddf3+0x10c>
 8000648:	f091 0f00 	teq	r1, #0
 800064c:	bf04      	itt	eq
 800064e:	4601      	moveq	r1, r0
 8000650:	2000      	moveq	r0, #0
 8000652:	fab1 f381 	clz	r3, r1
 8000656:	bf08      	it	eq
 8000658:	3320      	addeq	r3, #32
 800065a:	f1a3 030b 	sub.w	r3, r3, #11
 800065e:	f1b3 0220 	subs.w	r2, r3, #32
 8000662:	da0c      	bge.n	800067e <__adddf3+0x16e>
 8000664:	320c      	adds	r2, #12
 8000666:	dd08      	ble.n	800067a <__adddf3+0x16a>
 8000668:	f102 0c14 	add.w	ip, r2, #20
 800066c:	f1c2 020c 	rsb	r2, r2, #12
 8000670:	fa01 f00c 	lsl.w	r0, r1, ip
 8000674:	fa21 f102 	lsr.w	r1, r1, r2
 8000678:	e00c      	b.n	8000694 <__adddf3+0x184>
 800067a:	f102 0214 	add.w	r2, r2, #20
 800067e:	bfd8      	it	le
 8000680:	f1c2 0c20 	rsble	ip, r2, #32
 8000684:	fa01 f102 	lsl.w	r1, r1, r2
 8000688:	fa20 fc0c 	lsr.w	ip, r0, ip
 800068c:	bfdc      	itt	le
 800068e:	ea41 010c 	orrle.w	r1, r1, ip
 8000692:	4090      	lslle	r0, r2
 8000694:	1ae4      	subs	r4, r4, r3
 8000696:	bfa2      	ittt	ge
 8000698:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800069c:	4329      	orrge	r1, r5
 800069e:	bd30      	popge	{r4, r5, pc}
 80006a0:	ea6f 0404 	mvn.w	r4, r4
 80006a4:	3c1f      	subs	r4, #31
 80006a6:	da1c      	bge.n	80006e2 <__adddf3+0x1d2>
 80006a8:	340c      	adds	r4, #12
 80006aa:	dc0e      	bgt.n	80006ca <__adddf3+0x1ba>
 80006ac:	f104 0414 	add.w	r4, r4, #20
 80006b0:	f1c4 0220 	rsb	r2, r4, #32
 80006b4:	fa20 f004 	lsr.w	r0, r0, r4
 80006b8:	fa01 f302 	lsl.w	r3, r1, r2
 80006bc:	ea40 0003 	orr.w	r0, r0, r3
 80006c0:	fa21 f304 	lsr.w	r3, r1, r4
 80006c4:	ea45 0103 	orr.w	r1, r5, r3
 80006c8:	bd30      	pop	{r4, r5, pc}
 80006ca:	f1c4 040c 	rsb	r4, r4, #12
 80006ce:	f1c4 0220 	rsb	r2, r4, #32
 80006d2:	fa20 f002 	lsr.w	r0, r0, r2
 80006d6:	fa01 f304 	lsl.w	r3, r1, r4
 80006da:	ea40 0003 	orr.w	r0, r0, r3
 80006de:	4629      	mov	r1, r5
 80006e0:	bd30      	pop	{r4, r5, pc}
 80006e2:	fa21 f004 	lsr.w	r0, r1, r4
 80006e6:	4629      	mov	r1, r5
 80006e8:	bd30      	pop	{r4, r5, pc}
 80006ea:	f094 0f00 	teq	r4, #0
 80006ee:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80006f2:	bf06      	itte	eq
 80006f4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80006f8:	3401      	addeq	r4, #1
 80006fa:	3d01      	subne	r5, #1
 80006fc:	e74e      	b.n	800059c <__adddf3+0x8c>
 80006fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000702:	bf18      	it	ne
 8000704:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000708:	d029      	beq.n	800075e <__adddf3+0x24e>
 800070a:	ea94 0f05 	teq	r4, r5
 800070e:	bf08      	it	eq
 8000710:	ea90 0f02 	teqeq	r0, r2
 8000714:	d005      	beq.n	8000722 <__adddf3+0x212>
 8000716:	ea54 0c00 	orrs.w	ip, r4, r0
 800071a:	bf04      	itt	eq
 800071c:	4619      	moveq	r1, r3
 800071e:	4610      	moveq	r0, r2
 8000720:	bd30      	pop	{r4, r5, pc}
 8000722:	ea91 0f03 	teq	r1, r3
 8000726:	bf1e      	ittt	ne
 8000728:	2100      	movne	r1, #0
 800072a:	2000      	movne	r0, #0
 800072c:	bd30      	popne	{r4, r5, pc}
 800072e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000732:	d105      	bne.n	8000740 <__adddf3+0x230>
 8000734:	0040      	lsls	r0, r0, #1
 8000736:	4149      	adcs	r1, r1
 8000738:	bf28      	it	cs
 800073a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800073e:	bd30      	pop	{r4, r5, pc}
 8000740:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000744:	bf3c      	itt	cc
 8000746:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800074a:	bd30      	popcc	{r4, r5, pc}
 800074c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000750:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000754:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000758:	f04f 0000 	mov.w	r0, #0
 800075c:	bd30      	pop	{r4, r5, pc}
 800075e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000762:	bf1a      	itte	ne
 8000764:	4619      	movne	r1, r3
 8000766:	4610      	movne	r0, r2
 8000768:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800076c:	bf1c      	itt	ne
 800076e:	460b      	movne	r3, r1
 8000770:	4602      	movne	r2, r0
 8000772:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000776:	bf06      	itte	eq
 8000778:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800077c:	ea91 0f03 	teqeq	r1, r3
 8000780:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000784:	bd30      	pop	{r4, r5, pc}
 8000786:	bf00      	nop

08000788 <__aeabi_ui2d>:
 8000788:	f090 0f00 	teq	r0, #0
 800078c:	bf04      	itt	eq
 800078e:	2100      	moveq	r1, #0
 8000790:	4770      	bxeq	lr
 8000792:	b530      	push	{r4, r5, lr}
 8000794:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000798:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800079c:	f04f 0500 	mov.w	r5, #0
 80007a0:	f04f 0100 	mov.w	r1, #0
 80007a4:	e750      	b.n	8000648 <__adddf3+0x138>
 80007a6:	bf00      	nop

080007a8 <__aeabi_i2d>:
 80007a8:	f090 0f00 	teq	r0, #0
 80007ac:	bf04      	itt	eq
 80007ae:	2100      	moveq	r1, #0
 80007b0:	4770      	bxeq	lr
 80007b2:	b530      	push	{r4, r5, lr}
 80007b4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80007b8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80007bc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80007c0:	bf48      	it	mi
 80007c2:	4240      	negmi	r0, r0
 80007c4:	f04f 0100 	mov.w	r1, #0
 80007c8:	e73e      	b.n	8000648 <__adddf3+0x138>
 80007ca:	bf00      	nop

080007cc <__aeabi_f2d>:
 80007cc:	0042      	lsls	r2, r0, #1
 80007ce:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80007d2:	ea4f 0131 	mov.w	r1, r1, rrx
 80007d6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80007da:	bf1f      	itttt	ne
 80007dc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80007e0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80007e4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80007e8:	4770      	bxne	lr
 80007ea:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80007ee:	bf08      	it	eq
 80007f0:	4770      	bxeq	lr
 80007f2:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80007f6:	bf04      	itt	eq
 80007f8:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80007fc:	4770      	bxeq	lr
 80007fe:	b530      	push	{r4, r5, lr}
 8000800:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000804:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000808:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800080c:	e71c      	b.n	8000648 <__adddf3+0x138>
 800080e:	bf00      	nop

08000810 <__aeabi_ul2d>:
 8000810:	ea50 0201 	orrs.w	r2, r0, r1
 8000814:	bf08      	it	eq
 8000816:	4770      	bxeq	lr
 8000818:	b530      	push	{r4, r5, lr}
 800081a:	f04f 0500 	mov.w	r5, #0
 800081e:	e00a      	b.n	8000836 <__aeabi_l2d+0x16>

08000820 <__aeabi_l2d>:
 8000820:	ea50 0201 	orrs.w	r2, r0, r1
 8000824:	bf08      	it	eq
 8000826:	4770      	bxeq	lr
 8000828:	b530      	push	{r4, r5, lr}
 800082a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800082e:	d502      	bpl.n	8000836 <__aeabi_l2d+0x16>
 8000830:	4240      	negs	r0, r0
 8000832:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000836:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800083a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800083e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000842:	f43f aed8 	beq.w	80005f6 <__adddf3+0xe6>
 8000846:	f04f 0203 	mov.w	r2, #3
 800084a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800084e:	bf18      	it	ne
 8000850:	3203      	addne	r2, #3
 8000852:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000856:	bf18      	it	ne
 8000858:	3203      	addne	r2, #3
 800085a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800085e:	f1c2 0320 	rsb	r3, r2, #32
 8000862:	fa00 fc03 	lsl.w	ip, r0, r3
 8000866:	fa20 f002 	lsr.w	r0, r0, r2
 800086a:	fa01 fe03 	lsl.w	lr, r1, r3
 800086e:	ea40 000e 	orr.w	r0, r0, lr
 8000872:	fa21 f102 	lsr.w	r1, r1, r2
 8000876:	4414      	add	r4, r2
 8000878:	e6bd      	b.n	80005f6 <__adddf3+0xe6>
 800087a:	bf00      	nop

0800087c <__aeabi_d2f>:
 800087c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000880:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000884:	bf24      	itt	cs
 8000886:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800088a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800088e:	d90d      	bls.n	80008ac <__aeabi_d2f+0x30>
 8000890:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000894:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000898:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800089c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 80008a0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 80008a4:	bf08      	it	eq
 80008a6:	f020 0001 	biceq.w	r0, r0, #1
 80008aa:	4770      	bx	lr
 80008ac:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 80008b0:	d121      	bne.n	80008f6 <__aeabi_d2f+0x7a>
 80008b2:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 80008b6:	bfbc      	itt	lt
 80008b8:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 80008bc:	4770      	bxlt	lr
 80008be:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008c2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 80008c6:	f1c2 0218 	rsb	r2, r2, #24
 80008ca:	f1c2 0c20 	rsb	ip, r2, #32
 80008ce:	fa10 f30c 	lsls.w	r3, r0, ip
 80008d2:	fa20 f002 	lsr.w	r0, r0, r2
 80008d6:	bf18      	it	ne
 80008d8:	f040 0001 	orrne.w	r0, r0, #1
 80008dc:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80008e0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 80008e4:	fa03 fc0c 	lsl.w	ip, r3, ip
 80008e8:	ea40 000c 	orr.w	r0, r0, ip
 80008ec:	fa23 f302 	lsr.w	r3, r3, r2
 80008f0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80008f4:	e7cc      	b.n	8000890 <__aeabi_d2f+0x14>
 80008f6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 80008fa:	d107      	bne.n	800090c <__aeabi_d2f+0x90>
 80008fc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000900:	bf1e      	ittt	ne
 8000902:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000906:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 800090a:	4770      	bxne	lr
 800090c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000910:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000914:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000918:	4770      	bx	lr
 800091a:	bf00      	nop

0800091c <pa1_adc_int>:
#define ADC_SEQ_LEN_1 0X00
#define CR2_ADON	  (1U<<0)
#define CR2_SWSTART   (1U<<30)
#define SR_EOC        (1U<<1)

void pa1_adc_int(void){
 800091c:	b480      	push	{r7}
 800091e:	af00      	add	r7, sp, #0

	/*********Configuracion del puerto GPIOA**********/

	/*Habilitacion reloj pierto GPIOA */
	RCC->AHB1ENR |= GPIOAEN;
 8000920:	4b14      	ldr	r3, [pc, #80]	; (8000974 <pa1_adc_int+0x58>)
 8000922:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000924:	4a13      	ldr	r2, [pc, #76]	; (8000974 <pa1_adc_int+0x58>)
 8000926:	f043 0301 	orr.w	r3, r3, #1
 800092a:	6313      	str	r3, [r2, #48]	; 0x30

	/*Estableser PA1 en modo analogico, registro MODER*/
	GPIOA->MODER |= (1U<<2);//Bit 0 del registro MODER en el periferico GPIOA en 1.
 800092c:	4b12      	ldr	r3, [pc, #72]	; (8000978 <pa1_adc_int+0x5c>)
 800092e:	681b      	ldr	r3, [r3, #0]
 8000930:	4a11      	ldr	r2, [pc, #68]	; (8000978 <pa1_adc_int+0x5c>)
 8000932:	f043 0304 	orr.w	r3, r3, #4
 8000936:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<3);//Bit 1 del registro MODER en el periferico GPIOA en 1.
 8000938:	4b0f      	ldr	r3, [pc, #60]	; (8000978 <pa1_adc_int+0x5c>)
 800093a:	681b      	ldr	r3, [r3, #0]
 800093c:	4a0e      	ldr	r2, [pc, #56]	; (8000978 <pa1_adc_int+0x5c>)
 800093e:	f043 0308 	orr.w	r3, r3, #8
 8000942:	6013      	str	r3, [r2, #0]
	/**********Configuracion del ADC*************/

	/*Configuración de parametros ADC*/

	/*Habilitacion reloj ADC */
	RCC->APB2ENR |= ADC1EN;
 8000944:	4b0b      	ldr	r3, [pc, #44]	; (8000974 <pa1_adc_int+0x58>)
 8000946:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000948:	4a0a      	ldr	r2, [pc, #40]	; (8000974 <pa1_adc_int+0x58>)
 800094a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800094e:	6453      	str	r3, [r2, #68]	; 0x44

	/*Inico secuencia de conversion*/
	ADC1->SQR3 = ADC_CH1;
 8000950:	4b0a      	ldr	r3, [pc, #40]	; (800097c <pa1_adc_int+0x60>)
 8000952:	2201      	movs	r2, #1
 8000954:	635a      	str	r2, [r3, #52]	; 0x34
	 * Ej:
	 * Si se van autilizar lo cnales CH6, CH2 y CH0 y se desea empesar con la secuencia CH6-CH2-CH0 se etuliza la posicion SQRn_1(CH6)
	 * SQRn_2(CH2) y SQRn_1(CH0) donde n espesifica si es el 1, 2 y 3*/

	/*Longitud secuencia de conversion*/
	ADC1->SQR1 = ADC_SEQ_LEN_1;
 8000956:	4b09      	ldr	r3, [pc, #36]	; (800097c <pa1_adc_int+0x60>)
 8000958:	2200      	movs	r2, #0
 800095a:	62da      	str	r2, [r3, #44]	; 0x2c
	/*Esta  longitud se reriere a la cantidad de canales que se estan utilizando para la conversion, se se utiliza un canal
	 * la longitud de la secuencia es 1 si se utilizan 5 la longitud de la secuencia es 5*/

	/*Activacion ADC*/
	ADC1->CR2 |= CR2_ADON;
 800095c:	4b07      	ldr	r3, [pc, #28]	; (800097c <pa1_adc_int+0x60>)
 800095e:	689b      	ldr	r3, [r3, #8]
 8000960:	4a06      	ldr	r2, [pc, #24]	; (800097c <pa1_adc_int+0x60>)
 8000962:	f043 0301 	orr.w	r3, r3, #1
 8000966:	6093      	str	r3, [r2, #8]
}
 8000968:	bf00      	nop
 800096a:	46bd      	mov	sp, r7
 800096c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000970:	4770      	bx	lr
 8000972:	bf00      	nop
 8000974:	40023800 	.word	0x40023800
 8000978:	40020000 	.word	0x40020000
 800097c:	40012000 	.word	0x40012000

08000980 <inicio_conversion>:

void inicio_conversion(void){
 8000980:	b480      	push	{r7}
 8000982:	af00      	add	r7, sp, #0
	/*Inicia la conversion*/
	ADC1->CR2 |= CR2_SWSTART;
 8000984:	4b05      	ldr	r3, [pc, #20]	; (800099c <inicio_conversion+0x1c>)
 8000986:	689b      	ldr	r3, [r3, #8]
 8000988:	4a04      	ldr	r2, [pc, #16]	; (800099c <inicio_conversion+0x1c>)
 800098a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800098e:	6093      	str	r3, [r2, #8]

}
 8000990:	bf00      	nop
 8000992:	46bd      	mov	sp, r7
 8000994:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000998:	4770      	bx	lr
 800099a:	bf00      	nop
 800099c:	40012000 	.word	0x40012000

080009a0 <leer_conversion>:

uint32_t leer_conversion(void){
 80009a0:	b480      	push	{r7}
 80009a2:	af00      	add	r7, sp, #0
	/*Esperar a que se conplete la conversion*/
	while(!(ADC1->SR & SR_EOC)){};
 80009a4:	bf00      	nop
 80009a6:	4b06      	ldr	r3, [pc, #24]	; (80009c0 <leer_conversion+0x20>)
 80009a8:	681b      	ldr	r3, [r3, #0]
 80009aa:	f003 0302 	and.w	r3, r3, #2
 80009ae:	2b00      	cmp	r3, #0
 80009b0:	d0f9      	beq.n	80009a6 <leer_conversion+0x6>

	/*Leer los datos de la conversion*/
	return (ADC1->DR);
 80009b2:	4b03      	ldr	r3, [pc, #12]	; (80009c0 <leer_conversion+0x20>)
 80009b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c

}
 80009b6:	4618      	mov	r0, r3
 80009b8:	46bd      	mov	sp, r7
 80009ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009be:	4770      	bx	lr
 80009c0:	40012000 	.word	0x40012000
 80009c4:	00000000 	.word	0x00000000

080009c8 <main>:
 * por tal razon la conversion (funcion inicio_conversion()) se realiza dentro del bicle infinito
 * while*/

int32_t valor_ADC;
float voltaje_PA1;
int main(void){
 80009c8:	b580      	push	{r7, lr}
 80009ca:	af00      	add	r7, sp, #0


	uart2_rx_tx_init();
 80009cc:	f000 f8d2 	bl	8000b74 <uart2_rx_tx_init>
	pa1_adc_int();
 80009d0:	f7ff ffa4 	bl	800091c <pa1_adc_int>


	while(1){
		inicio_conversion();
 80009d4:	f7ff ffd4 	bl	8000980 <inicio_conversion>
		valor_ADC = leer_conversion();
 80009d8:	f7ff ffe2 	bl	80009a0 <leer_conversion>
 80009dc:	4603      	mov	r3, r0
 80009de:	461a      	mov	r2, r3
 80009e0:	4b0f      	ldr	r3, [pc, #60]	; (8000a20 <main+0x58>)
 80009e2:	601a      	str	r2, [r3, #0]
		voltaje_PA1 = 0.000805664*valor_ADC;
 80009e4:	4b0e      	ldr	r3, [pc, #56]	; (8000a20 <main+0x58>)
 80009e6:	681b      	ldr	r3, [r3, #0]
 80009e8:	4618      	mov	r0, r3
 80009ea:	f7ff fedd 	bl	80007a8 <__aeabi_i2d>
 80009ee:	a30a      	add	r3, pc, #40	; (adr r3, 8000a18 <main+0x50>)
 80009f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80009f4:	f7ff fc5c 	bl	80002b0 <__aeabi_dmul>
 80009f8:	4602      	mov	r2, r0
 80009fa:	460b      	mov	r3, r1
 80009fc:	4610      	mov	r0, r2
 80009fe:	4619      	mov	r1, r3
 8000a00:	f7ff ff3c 	bl	800087c <__aeabi_d2f>
 8000a04:	4603      	mov	r3, r0
 8000a06:	4a07      	ldr	r2, [pc, #28]	; (8000a24 <main+0x5c>)
 8000a08:	6013      	str	r3, [r2, #0]
		printf("Valor del ADC : %d\n\r",(int)valor_ADC);
 8000a0a:	4b05      	ldr	r3, [pc, #20]	; (8000a20 <main+0x58>)
 8000a0c:	681b      	ldr	r3, [r3, #0]
 8000a0e:	4619      	mov	r1, r3
 8000a10:	4805      	ldr	r0, [pc, #20]	; (8000a28 <main+0x60>)
 8000a12:	f000 f9b9 	bl	8000d88 <iprintf>
		inicio_conversion();
 8000a16:	e7dd      	b.n	80009d4 <main+0xc>
 8000a18:	440a4e96 	.word	0x440a4e96
 8000a1c:	3f4a6666 	.word	0x3f4a6666
 8000a20:	20000080 	.word	0x20000080
 8000a24:	20000084 	.word	0x20000084
 8000a28:	08001cbc 	.word	0x08001cbc

08000a2c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000a2c:	b580      	push	{r7, lr}
 8000a2e:	b086      	sub	sp, #24
 8000a30:	af00      	add	r7, sp, #0
 8000a32:	60f8      	str	r0, [r7, #12]
 8000a34:	60b9      	str	r1, [r7, #8]
 8000a36:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000a38:	2300      	movs	r3, #0
 8000a3a:	617b      	str	r3, [r7, #20]
 8000a3c:	e00a      	b.n	8000a54 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000a3e:	f3af 8000 	nop.w
 8000a42:	4601      	mov	r1, r0
 8000a44:	68bb      	ldr	r3, [r7, #8]
 8000a46:	1c5a      	adds	r2, r3, #1
 8000a48:	60ba      	str	r2, [r7, #8]
 8000a4a:	b2ca      	uxtb	r2, r1
 8000a4c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000a4e:	697b      	ldr	r3, [r7, #20]
 8000a50:	3301      	adds	r3, #1
 8000a52:	617b      	str	r3, [r7, #20]
 8000a54:	697a      	ldr	r2, [r7, #20]
 8000a56:	687b      	ldr	r3, [r7, #4]
 8000a58:	429a      	cmp	r2, r3
 8000a5a:	dbf0      	blt.n	8000a3e <_read+0x12>
  }

  return len;
 8000a5c:	687b      	ldr	r3, [r7, #4]
}
 8000a5e:	4618      	mov	r0, r3
 8000a60:	3718      	adds	r7, #24
 8000a62:	46bd      	mov	sp, r7
 8000a64:	bd80      	pop	{r7, pc}

08000a66 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000a66:	b580      	push	{r7, lr}
 8000a68:	b086      	sub	sp, #24
 8000a6a:	af00      	add	r7, sp, #0
 8000a6c:	60f8      	str	r0, [r7, #12]
 8000a6e:	60b9      	str	r1, [r7, #8]
 8000a70:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000a72:	2300      	movs	r3, #0
 8000a74:	617b      	str	r3, [r7, #20]
 8000a76:	e009      	b.n	8000a8c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000a78:	68bb      	ldr	r3, [r7, #8]
 8000a7a:	1c5a      	adds	r2, r3, #1
 8000a7c:	60ba      	str	r2, [r7, #8]
 8000a7e:	781b      	ldrb	r3, [r3, #0]
 8000a80:	4618      	mov	r0, r3
 8000a82:	f000 f8db 	bl	8000c3c <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000a86:	697b      	ldr	r3, [r7, #20]
 8000a88:	3301      	adds	r3, #1
 8000a8a:	617b      	str	r3, [r7, #20]
 8000a8c:	697a      	ldr	r2, [r7, #20]
 8000a8e:	687b      	ldr	r3, [r7, #4]
 8000a90:	429a      	cmp	r2, r3
 8000a92:	dbf1      	blt.n	8000a78 <_write+0x12>
  }
  return len;
 8000a94:	687b      	ldr	r3, [r7, #4]
}
 8000a96:	4618      	mov	r0, r3
 8000a98:	3718      	adds	r7, #24
 8000a9a:	46bd      	mov	sp, r7
 8000a9c:	bd80      	pop	{r7, pc}

08000a9e <_close>:

int _close(int file)
{
 8000a9e:	b480      	push	{r7}
 8000aa0:	b083      	sub	sp, #12
 8000aa2:	af00      	add	r7, sp, #0
 8000aa4:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000aa6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8000aaa:	4618      	mov	r0, r3
 8000aac:	370c      	adds	r7, #12
 8000aae:	46bd      	mov	sp, r7
 8000ab0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ab4:	4770      	bx	lr

08000ab6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000ab6:	b480      	push	{r7}
 8000ab8:	b083      	sub	sp, #12
 8000aba:	af00      	add	r7, sp, #0
 8000abc:	6078      	str	r0, [r7, #4]
 8000abe:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000ac0:	683b      	ldr	r3, [r7, #0]
 8000ac2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000ac6:	605a      	str	r2, [r3, #4]
  return 0;
 8000ac8:	2300      	movs	r3, #0
}
 8000aca:	4618      	mov	r0, r3
 8000acc:	370c      	adds	r7, #12
 8000ace:	46bd      	mov	sp, r7
 8000ad0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ad4:	4770      	bx	lr

08000ad6 <_isatty>:

int _isatty(int file)
{
 8000ad6:	b480      	push	{r7}
 8000ad8:	b083      	sub	sp, #12
 8000ada:	af00      	add	r7, sp, #0
 8000adc:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000ade:	2301      	movs	r3, #1
}
 8000ae0:	4618      	mov	r0, r3
 8000ae2:	370c      	adds	r7, #12
 8000ae4:	46bd      	mov	sp, r7
 8000ae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000aea:	4770      	bx	lr

08000aec <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000aec:	b480      	push	{r7}
 8000aee:	b085      	sub	sp, #20
 8000af0:	af00      	add	r7, sp, #0
 8000af2:	60f8      	str	r0, [r7, #12]
 8000af4:	60b9      	str	r1, [r7, #8]
 8000af6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000af8:	2300      	movs	r3, #0
}
 8000afa:	4618      	mov	r0, r3
 8000afc:	3714      	adds	r7, #20
 8000afe:	46bd      	mov	sp, r7
 8000b00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b04:	4770      	bx	lr
	...

08000b08 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000b08:	b580      	push	{r7, lr}
 8000b0a:	b086      	sub	sp, #24
 8000b0c:	af00      	add	r7, sp, #0
 8000b0e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000b10:	4a14      	ldr	r2, [pc, #80]	; (8000b64 <_sbrk+0x5c>)
 8000b12:	4b15      	ldr	r3, [pc, #84]	; (8000b68 <_sbrk+0x60>)
 8000b14:	1ad3      	subs	r3, r2, r3
 8000b16:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000b18:	697b      	ldr	r3, [r7, #20]
 8000b1a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000b1c:	4b13      	ldr	r3, [pc, #76]	; (8000b6c <_sbrk+0x64>)
 8000b1e:	681b      	ldr	r3, [r3, #0]
 8000b20:	2b00      	cmp	r3, #0
 8000b22:	d102      	bne.n	8000b2a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000b24:	4b11      	ldr	r3, [pc, #68]	; (8000b6c <_sbrk+0x64>)
 8000b26:	4a12      	ldr	r2, [pc, #72]	; (8000b70 <_sbrk+0x68>)
 8000b28:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000b2a:	4b10      	ldr	r3, [pc, #64]	; (8000b6c <_sbrk+0x64>)
 8000b2c:	681a      	ldr	r2, [r3, #0]
 8000b2e:	687b      	ldr	r3, [r7, #4]
 8000b30:	4413      	add	r3, r2
 8000b32:	693a      	ldr	r2, [r7, #16]
 8000b34:	429a      	cmp	r2, r3
 8000b36:	d207      	bcs.n	8000b48 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000b38:	f000 f8f4 	bl	8000d24 <__errno>
 8000b3c:	4603      	mov	r3, r0
 8000b3e:	220c      	movs	r2, #12
 8000b40:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000b42:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000b46:	e009      	b.n	8000b5c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000b48:	4b08      	ldr	r3, [pc, #32]	; (8000b6c <_sbrk+0x64>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000b4e:	4b07      	ldr	r3, [pc, #28]	; (8000b6c <_sbrk+0x64>)
 8000b50:	681a      	ldr	r2, [r3, #0]
 8000b52:	687b      	ldr	r3, [r7, #4]
 8000b54:	4413      	add	r3, r2
 8000b56:	4a05      	ldr	r2, [pc, #20]	; (8000b6c <_sbrk+0x64>)
 8000b58:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000b5a:	68fb      	ldr	r3, [r7, #12]
}
 8000b5c:	4618      	mov	r0, r3
 8000b5e:	3718      	adds	r7, #24
 8000b60:	46bd      	mov	sp, r7
 8000b62:	bd80      	pop	{r7, pc}
 8000b64:	20020000 	.word	0x20020000
 8000b68:	00000400 	.word	0x00000400
 8000b6c:	20000088 	.word	0x20000088
 8000b70:	200000a0 	.word	0x200000a0

08000b74 <uart2_rx_tx_init>:
void uart2_write(int ch);
int __io_putchar(int ch);


void uart2_rx_tx_init(void)
{
 8000b74:	b580      	push	{r7, lr}
 8000b76:	af00      	add	r7, sp, #0
	/***************Configurción del puerto UART**************/
	/*Active el acceso al reloj para los pines del uart (gpioa)*/
	RCC->AHB1ENR |= GPIOAEN;
 8000b78:	4b2c      	ldr	r3, [pc, #176]	; (8000c2c <uart2_rx_tx_init+0xb8>)
 8000b7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b7c:	4a2b      	ldr	r2, [pc, #172]	; (8000c2c <uart2_rx_tx_init+0xb8>)
 8000b7e:	f043 0301 	orr.w	r3, r3, #1
 8000b82:	6313      	str	r3, [r2, #48]	; 0x30
	/*Congigure el pin correpondiente (en este caso solo trnasmisión y es el pin PA2) en modo alternativo*/
	GPIOA->MODER &=~ (1U<<4);//Bit 4 del registro MODER en el periferico GPIOA en 0. &=~ es invertir
 8000b84:	4b2a      	ldr	r3, [pc, #168]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000b86:	681b      	ldr	r3, [r3, #0]
 8000b88:	4a29      	ldr	r2, [pc, #164]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000b8a:	f023 0310 	bic.w	r3, r3, #16
 8000b8e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=  (1U<<5);//Bit 5 del registro MODER en el periferico GPIOA en 1.
 8000b90:	4b27      	ldr	r3, [pc, #156]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000b92:	681b      	ldr	r3, [r3, #0]
 8000b94:	4a26      	ldr	r2, [pc, #152]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000b96:	f043 0320 	orr.w	r3, r3, #32
 8000b9a:	6013      	str	r3, [r2, #0]
	/*Configuración del pin PA3 en cmodo alternativo*/
	GPIOA->MODER &= ~(1U<<6);
 8000b9c:	4b24      	ldr	r3, [pc, #144]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000b9e:	681b      	ldr	r3, [r3, #0]
 8000ba0:	4a23      	ldr	r2, [pc, #140]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000ba2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000ba6:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=  (1U<<7);
 8000ba8:	4b21      	ldr	r3, [pc, #132]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000baa:	681b      	ldr	r3, [r3, #0]
 8000bac:	4a20      	ldr	r2, [pc, #128]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000bae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000bb2:	6013      	str	r3, [r2, #0]
	/*Congigure el pin correpondiente (en este caso solo trnasmisión y es el pin PA2) en el tipo de modo alternativo
	  en este caso como uart (AF07)*/
	//GPIOA->AFR[0] |=  (1U<<8);
	//GPIOA->AFR[0] |=  (1U<<9);
	//GPIOA->AFR[0] |=  (1U<<10);
	GPIOA->AFR[0] |=  (1U<<8|1U<<9|1U<<10);
 8000bb4:	4b1e      	ldr	r3, [pc, #120]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000bb6:	6a1b      	ldr	r3, [r3, #32]
 8000bb8:	4a1d      	ldr	r2, [pc, #116]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000bba:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8000bbe:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<11);
 8000bc0:	4b1b      	ldr	r3, [pc, #108]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000bc2:	6a1b      	ldr	r3, [r3, #32]
 8000bc4:	4a1a      	ldr	r2, [pc, #104]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000bc6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000bca:	6213      	str	r3, [r2, #32]
	/*Congigure el pin correpondiente (en este caso solo trnasmisión y es el pin PA3) en el tipo de modo alternativo
		  en este caso como uart (AF07)*/
	GPIOA->AFR[0] |=  (1U<<14|1U<<13|1U<<12);
 8000bcc:	4b18      	ldr	r3, [pc, #96]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000bce:	6a1b      	ldr	r3, [r3, #32]
 8000bd0:	4a17      	ldr	r2, [pc, #92]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000bd2:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 8000bd6:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<15);
 8000bd8:	4b15      	ldr	r3, [pc, #84]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000bda:	6a1b      	ldr	r3, [r3, #32]
 8000bdc:	4a14      	ldr	r2, [pc, #80]	; (8000c30 <uart2_rx_tx_init+0xbc>)
 8000bde:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000be2:	6213      	str	r3, [r2, #32]
	 de datos esta configurado como un vector de dos posiciones con L=0 y H=1. El vaor del refistro AFR[L H]
	 se optiene de la Table 11. Alternate function pag 57 hoja tecnica*/

	/***************Configurción del modulo UART**************/
	/*Habilitar el acceso al reloj de uart*/
	RCC->APB1ENR |= UART2EN;/* En el periferico RCC se accede al registro APB1ENR y se cmodifica el
 8000be4:	4b11      	ldr	r3, [pc, #68]	; (8000c2c <uart2_rx_tx_init+0xb8>)
 8000be6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000be8:	4a10      	ldr	r2, [pc, #64]	; (8000c2c <uart2_rx_tx_init+0xb8>)
 8000bea:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000bee:	6413      	str	r3, [r2, #64]	; 0x40
	registro operandolo con UARTEN = (1U<<17)*/

	/*Confugurar la velocidad en baudios (baudrate) del uart*/
	uart_set_bautrate(USART2, APB1_CLK, BAUDRATE);
 8000bf0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000bf4:	490f      	ldr	r1, [pc, #60]	; (8000c34 <uart2_rx_tx_init+0xc0>)
 8000bf6:	4810      	ldr	r0, [pc, #64]	; (8000c38 <uart2_rx_tx_init+0xc4>)
 8000bf8:	f000 f844 	bl	8000c84 <uart_set_bautrate>


	/* Habilita la reseccion por el DMA */
	USART2->CR3 |= DMAR;
 8000bfc:	4b0e      	ldr	r3, [pc, #56]	; (8000c38 <uart2_rx_tx_init+0xc4>)
 8000bfe:	695b      	ldr	r3, [r3, #20]
 8000c00:	4a0d      	ldr	r2, [pc, #52]	; (8000c38 <uart2_rx_tx_init+0xc4>)
 8000c02:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000c06:	6153      	str	r3, [r2, #20]

	/* Habilita la transmision por el DMA */
	USART2->CR3 |= DMAT;
 8000c08:	4b0b      	ldr	r3, [pc, #44]	; (8000c38 <uart2_rx_tx_init+0xc4>)
 8000c0a:	695b      	ldr	r3, [r3, #20]
 8000c0c:	4a0a      	ldr	r2, [pc, #40]	; (8000c38 <uart2_rx_tx_init+0xc4>)
 8000c0e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c12:	6153      	str	r3, [r2, #20]

	/*Configurar la dirección de trnasferencia para este caso trnasmision y recepción de datos*/
	USART2->CR1 = (CR1_TE | CR1_RE);/* trnasmision y recepción de datos. No se uso el oprador |= (OR) por que se aprobecho para limpiar
 8000c14:	4b08      	ldr	r3, [pc, #32]	; (8000c38 <uart2_rx_tx_init+0xc4>)
 8000c16:	220c      	movs	r2, #12
 8000c18:	60da      	str	r2, [r3, #12]
	todala uart por lo que la operacion (1U<<3) al colocar el bit 3 en 1 el resto
	los pone en cero por lo  que es la confihuracion predeterminada de la uart*/

	/*Habilitar el modulo uart*/
	USART2->CR1 |= CR1_UE;/*Cuando se borra este bit, los preescaladores y salidas USART se detienen y finaliza
 8000c1a:	4b07      	ldr	r3, [pc, #28]	; (8000c38 <uart2_rx_tx_init+0xc4>)
 8000c1c:	68db      	ldr	r3, [r3, #12]
 8000c1e:	4a06      	ldr	r2, [pc, #24]	; (8000c38 <uart2_rx_tx_init+0xc4>)
 8000c20:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000c24:	60d3      	str	r3, [r2, #12]
	la transferencia de bytes actual para reducir el consumo de energía. Este bit se establece y borra por software.
	UE = 0: Prescaler USART y salidas deshabilitadas
	UE = 1: USART habilitado */
}
 8000c26:	bf00      	nop
 8000c28:	bd80      	pop	{r7, pc}
 8000c2a:	bf00      	nop
 8000c2c:	40023800 	.word	0x40023800
 8000c30:	40020000 	.word	0x40020000
 8000c34:	00f42400 	.word	0x00f42400
 8000c38:	40004400 	.word	0x40004400

08000c3c <__io_putchar>:


int __io_putchar(int ch)//__io_
{
 8000c3c:	b580      	push	{r7, lr}
 8000c3e:	b082      	sub	sp, #8
 8000c40:	af00      	add	r7, sp, #0
 8000c42:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8000c44:	6878      	ldr	r0, [r7, #4]
 8000c46:	f000 f805 	bl	8000c54 <uart2_write>
	return ch;
 8000c4a:	687b      	ldr	r3, [r7, #4]
}
 8000c4c:	4618      	mov	r0, r3
 8000c4e:	3708      	adds	r7, #8
 8000c50:	46bd      	mov	sp, r7
 8000c52:	bd80      	pop	{r7, pc}

08000c54 <uart2_write>:
/*Funcion para escribir en la uart*/
void uart2_write(int ch)
{
 8000c54:	b480      	push	{r7}
 8000c56:	b083      	sub	sp, #12
 8000c58:	af00      	add	r7, sp, #0
 8000c5a:	6078      	str	r0, [r7, #4]
	/*Validar que el bit del registro de datos este vacio antes de trnasmitir*/
	while(!(USART2->SR & SR_TXE)){}// Esta operación devuelve 1 si el bit TXE esta establecido
 8000c5c:	bf00      	nop
 8000c5e:	4b08      	ldr	r3, [pc, #32]	; (8000c80 <uart2_write+0x2c>)
 8000c60:	681b      	ldr	r3, [r3, #0]
 8000c62:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000c66:	2b00      	cmp	r3, #0
 8000c68:	d0f9      	beq.n	8000c5e <uart2_write+0xa>
	se borra mediante una escritura en el registro USART_DR.
	0: Los datos no se transfieren al registro de desplazamiento
	1: Los datos se transfieren al registro de desplazamiento)
	Nota: Este bit se utiliza durante la transmisión de un solo búfer.*/
	/*Escribir para trnasmitir en el registro de datos*/
	USART2->DR =(ch & 0xFF);/*Envia buffer*/
 8000c6a:	687b      	ldr	r3, [r7, #4]
 8000c6c:	4a04      	ldr	r2, [pc, #16]	; (8000c80 <uart2_write+0x2c>)
 8000c6e:	b2db      	uxtb	r3, r3
 8000c70:	6053      	str	r3, [r2, #4]
}
 8000c72:	bf00      	nop
 8000c74:	370c      	adds	r7, #12
 8000c76:	46bd      	mov	sp, r7
 8000c78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c7c:	4770      	bx	lr
 8000c7e:	bf00      	nop
 8000c80:	40004400 	.word	0x40004400

08000c84 <uart_set_bautrate>:
	/*Se retorna el dato leido*/
	return USART2->DR;
}

static void uart_set_bautrate(USART_TypeDef *USARTx, uint32_t clkPerife, uint32_t BaudRate)
{
 8000c84:	b580      	push	{r7, lr}
 8000c86:	b084      	sub	sp, #16
 8000c88:	af00      	add	r7, sp, #0
 8000c8a:	60f8      	str	r0, [r7, #12]
 8000c8c:	60b9      	str	r1, [r7, #8]
 8000c8e:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_bd(clkPerife, BaudRate);
 8000c90:	6879      	ldr	r1, [r7, #4]
 8000c92:	68b8      	ldr	r0, [r7, #8]
 8000c94:	f000 f808 	bl	8000ca8 <compute_uart_bd>
 8000c98:	4603      	mov	r3, r0
 8000c9a:	461a      	mov	r2, r3
 8000c9c:	68fb      	ldr	r3, [r7, #12]
 8000c9e:	609a      	str	r2, [r3, #8]
}
 8000ca0:	bf00      	nop
 8000ca2:	3710      	adds	r7, #16
 8000ca4:	46bd      	mov	sp, r7
 8000ca6:	bd80      	pop	{r7, pc}

08000ca8 <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t clkPerife, uint32_t BaudRate)
{
 8000ca8:	b480      	push	{r7}
 8000caa:	b083      	sub	sp, #12
 8000cac:	af00      	add	r7, sp, #0
 8000cae:	6078      	str	r0, [r7, #4]
 8000cb0:	6039      	str	r1, [r7, #0]
	return((clkPerife + (BaudRate/2U))/BaudRate);
 8000cb2:	683b      	ldr	r3, [r7, #0]
 8000cb4:	085a      	lsrs	r2, r3, #1
 8000cb6:	687b      	ldr	r3, [r7, #4]
 8000cb8:	441a      	add	r2, r3
 8000cba:	683b      	ldr	r3, [r7, #0]
 8000cbc:	fbb2 f3f3 	udiv	r3, r2, r3
 8000cc0:	b29b      	uxth	r3, r3
	/*El valor que devuelve esta función se escribira en el
	 registro de velovidad de baudios BuadRate de la UART*/
}
 8000cc2:	4618      	mov	r0, r3
 8000cc4:	370c      	adds	r7, #12
 8000cc6:	46bd      	mov	sp, r7
 8000cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ccc:	4770      	bx	lr
	...

08000cd0 <Reset_Handler>:
 8000cd0:	480d      	ldr	r0, [pc, #52]	; (8000d08 <LoopForever+0x2>)
 8000cd2:	4685      	mov	sp, r0
 8000cd4:	f3af 8000 	nop.w
 8000cd8:	480c      	ldr	r0, [pc, #48]	; (8000d0c <LoopForever+0x6>)
 8000cda:	490d      	ldr	r1, [pc, #52]	; (8000d10 <LoopForever+0xa>)
 8000cdc:	4a0d      	ldr	r2, [pc, #52]	; (8000d14 <LoopForever+0xe>)
 8000cde:	2300      	movs	r3, #0
 8000ce0:	e002      	b.n	8000ce8 <LoopCopyDataInit>

08000ce2 <CopyDataInit>:
 8000ce2:	58d4      	ldr	r4, [r2, r3]
 8000ce4:	50c4      	str	r4, [r0, r3]
 8000ce6:	3304      	adds	r3, #4

08000ce8 <LoopCopyDataInit>:
 8000ce8:	18c4      	adds	r4, r0, r3
 8000cea:	428c      	cmp	r4, r1
 8000cec:	d3f9      	bcc.n	8000ce2 <CopyDataInit>
 8000cee:	4a0a      	ldr	r2, [pc, #40]	; (8000d18 <LoopForever+0x12>)
 8000cf0:	4c0a      	ldr	r4, [pc, #40]	; (8000d1c <LoopForever+0x16>)
 8000cf2:	2300      	movs	r3, #0
 8000cf4:	e001      	b.n	8000cfa <LoopFillZerobss>

08000cf6 <FillZerobss>:
 8000cf6:	6013      	str	r3, [r2, #0]
 8000cf8:	3204      	adds	r2, #4

08000cfa <LoopFillZerobss>:
 8000cfa:	42a2      	cmp	r2, r4
 8000cfc:	d3fb      	bcc.n	8000cf6 <FillZerobss>
 8000cfe:	f000 f817 	bl	8000d30 <__libc_init_array>
 8000d02:	f7ff fe61 	bl	80009c8 <main>

08000d06 <LoopForever>:
 8000d06:	e7fe      	b.n	8000d06 <LoopForever>
 8000d08:	20020000 	.word	0x20020000
 8000d0c:	20000000 	.word	0x20000000
 8000d10:	20000064 	.word	0x20000064
 8000d14:	08001d74 	.word	0x08001d74
 8000d18:	20000064 	.word	0x20000064
 8000d1c:	2000009c 	.word	0x2000009c

08000d20 <ADC_IRQHandler>:
 8000d20:	e7fe      	b.n	8000d20 <ADC_IRQHandler>
	...

08000d24 <__errno>:
 8000d24:	4b01      	ldr	r3, [pc, #4]	; (8000d2c <__errno+0x8>)
 8000d26:	6818      	ldr	r0, [r3, #0]
 8000d28:	4770      	bx	lr
 8000d2a:	bf00      	nop
 8000d2c:	20000000 	.word	0x20000000

08000d30 <__libc_init_array>:
 8000d30:	b570      	push	{r4, r5, r6, lr}
 8000d32:	4d0d      	ldr	r5, [pc, #52]	; (8000d68 <__libc_init_array+0x38>)
 8000d34:	4c0d      	ldr	r4, [pc, #52]	; (8000d6c <__libc_init_array+0x3c>)
 8000d36:	1b64      	subs	r4, r4, r5
 8000d38:	10a4      	asrs	r4, r4, #2
 8000d3a:	2600      	movs	r6, #0
 8000d3c:	42a6      	cmp	r6, r4
 8000d3e:	d109      	bne.n	8000d54 <__libc_init_array+0x24>
 8000d40:	4d0b      	ldr	r5, [pc, #44]	; (8000d70 <__libc_init_array+0x40>)
 8000d42:	4c0c      	ldr	r4, [pc, #48]	; (8000d74 <__libc_init_array+0x44>)
 8000d44:	f000 ffae 	bl	8001ca4 <_init>
 8000d48:	1b64      	subs	r4, r4, r5
 8000d4a:	10a4      	asrs	r4, r4, #2
 8000d4c:	2600      	movs	r6, #0
 8000d4e:	42a6      	cmp	r6, r4
 8000d50:	d105      	bne.n	8000d5e <__libc_init_array+0x2e>
 8000d52:	bd70      	pop	{r4, r5, r6, pc}
 8000d54:	f855 3b04 	ldr.w	r3, [r5], #4
 8000d58:	4798      	blx	r3
 8000d5a:	3601      	adds	r6, #1
 8000d5c:	e7ee      	b.n	8000d3c <__libc_init_array+0xc>
 8000d5e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000d62:	4798      	blx	r3
 8000d64:	3601      	adds	r6, #1
 8000d66:	e7f2      	b.n	8000d4e <__libc_init_array+0x1e>
 8000d68:	08001d6c 	.word	0x08001d6c
 8000d6c:	08001d6c 	.word	0x08001d6c
 8000d70:	08001d6c 	.word	0x08001d6c
 8000d74:	08001d70 	.word	0x08001d70

08000d78 <memset>:
 8000d78:	4402      	add	r2, r0
 8000d7a:	4603      	mov	r3, r0
 8000d7c:	4293      	cmp	r3, r2
 8000d7e:	d100      	bne.n	8000d82 <memset+0xa>
 8000d80:	4770      	bx	lr
 8000d82:	f803 1b01 	strb.w	r1, [r3], #1
 8000d86:	e7f9      	b.n	8000d7c <memset+0x4>

08000d88 <iprintf>:
 8000d88:	b40f      	push	{r0, r1, r2, r3}
 8000d8a:	4b0a      	ldr	r3, [pc, #40]	; (8000db4 <iprintf+0x2c>)
 8000d8c:	b513      	push	{r0, r1, r4, lr}
 8000d8e:	681c      	ldr	r4, [r3, #0]
 8000d90:	b124      	cbz	r4, 8000d9c <iprintf+0x14>
 8000d92:	69a3      	ldr	r3, [r4, #24]
 8000d94:	b913      	cbnz	r3, 8000d9c <iprintf+0x14>
 8000d96:	4620      	mov	r0, r4
 8000d98:	f000 f866 	bl	8000e68 <__sinit>
 8000d9c:	ab05      	add	r3, sp, #20
 8000d9e:	9a04      	ldr	r2, [sp, #16]
 8000da0:	68a1      	ldr	r1, [r4, #8]
 8000da2:	9301      	str	r3, [sp, #4]
 8000da4:	4620      	mov	r0, r4
 8000da6:	f000 f9bd 	bl	8001124 <_vfiprintf_r>
 8000daa:	b002      	add	sp, #8
 8000dac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000db0:	b004      	add	sp, #16
 8000db2:	4770      	bx	lr
 8000db4:	20000000 	.word	0x20000000

08000db8 <std>:
 8000db8:	2300      	movs	r3, #0
 8000dba:	b510      	push	{r4, lr}
 8000dbc:	4604      	mov	r4, r0
 8000dbe:	e9c0 3300 	strd	r3, r3, [r0]
 8000dc2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000dc6:	6083      	str	r3, [r0, #8]
 8000dc8:	8181      	strh	r1, [r0, #12]
 8000dca:	6643      	str	r3, [r0, #100]	; 0x64
 8000dcc:	81c2      	strh	r2, [r0, #14]
 8000dce:	6183      	str	r3, [r0, #24]
 8000dd0:	4619      	mov	r1, r3
 8000dd2:	2208      	movs	r2, #8
 8000dd4:	305c      	adds	r0, #92	; 0x5c
 8000dd6:	f7ff ffcf 	bl	8000d78 <memset>
 8000dda:	4b05      	ldr	r3, [pc, #20]	; (8000df0 <std+0x38>)
 8000ddc:	6263      	str	r3, [r4, #36]	; 0x24
 8000dde:	4b05      	ldr	r3, [pc, #20]	; (8000df4 <std+0x3c>)
 8000de0:	62a3      	str	r3, [r4, #40]	; 0x28
 8000de2:	4b05      	ldr	r3, [pc, #20]	; (8000df8 <std+0x40>)
 8000de4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000de6:	4b05      	ldr	r3, [pc, #20]	; (8000dfc <std+0x44>)
 8000de8:	6224      	str	r4, [r4, #32]
 8000dea:	6323      	str	r3, [r4, #48]	; 0x30
 8000dec:	bd10      	pop	{r4, pc}
 8000dee:	bf00      	nop
 8000df0:	080016cd 	.word	0x080016cd
 8000df4:	080016ef 	.word	0x080016ef
 8000df8:	08001727 	.word	0x08001727
 8000dfc:	0800174b 	.word	0x0800174b

08000e00 <_cleanup_r>:
 8000e00:	4901      	ldr	r1, [pc, #4]	; (8000e08 <_cleanup_r+0x8>)
 8000e02:	f000 b8af 	b.w	8000f64 <_fwalk_reent>
 8000e06:	bf00      	nop
 8000e08:	08001a25 	.word	0x08001a25

08000e0c <__sfmoreglue>:
 8000e0c:	b570      	push	{r4, r5, r6, lr}
 8000e0e:	2268      	movs	r2, #104	; 0x68
 8000e10:	1e4d      	subs	r5, r1, #1
 8000e12:	4355      	muls	r5, r2
 8000e14:	460e      	mov	r6, r1
 8000e16:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000e1a:	f000 f8e5 	bl	8000fe8 <_malloc_r>
 8000e1e:	4604      	mov	r4, r0
 8000e20:	b140      	cbz	r0, 8000e34 <__sfmoreglue+0x28>
 8000e22:	2100      	movs	r1, #0
 8000e24:	e9c0 1600 	strd	r1, r6, [r0]
 8000e28:	300c      	adds	r0, #12
 8000e2a:	60a0      	str	r0, [r4, #8]
 8000e2c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000e30:	f7ff ffa2 	bl	8000d78 <memset>
 8000e34:	4620      	mov	r0, r4
 8000e36:	bd70      	pop	{r4, r5, r6, pc}

08000e38 <__sfp_lock_acquire>:
 8000e38:	4801      	ldr	r0, [pc, #4]	; (8000e40 <__sfp_lock_acquire+0x8>)
 8000e3a:	f000 b8b3 	b.w	8000fa4 <__retarget_lock_acquire_recursive>
 8000e3e:	bf00      	nop
 8000e40:	2000008d 	.word	0x2000008d

08000e44 <__sfp_lock_release>:
 8000e44:	4801      	ldr	r0, [pc, #4]	; (8000e4c <__sfp_lock_release+0x8>)
 8000e46:	f000 b8ae 	b.w	8000fa6 <__retarget_lock_release_recursive>
 8000e4a:	bf00      	nop
 8000e4c:	2000008d 	.word	0x2000008d

08000e50 <__sinit_lock_acquire>:
 8000e50:	4801      	ldr	r0, [pc, #4]	; (8000e58 <__sinit_lock_acquire+0x8>)
 8000e52:	f000 b8a7 	b.w	8000fa4 <__retarget_lock_acquire_recursive>
 8000e56:	bf00      	nop
 8000e58:	2000008e 	.word	0x2000008e

08000e5c <__sinit_lock_release>:
 8000e5c:	4801      	ldr	r0, [pc, #4]	; (8000e64 <__sinit_lock_release+0x8>)
 8000e5e:	f000 b8a2 	b.w	8000fa6 <__retarget_lock_release_recursive>
 8000e62:	bf00      	nop
 8000e64:	2000008e 	.word	0x2000008e

08000e68 <__sinit>:
 8000e68:	b510      	push	{r4, lr}
 8000e6a:	4604      	mov	r4, r0
 8000e6c:	f7ff fff0 	bl	8000e50 <__sinit_lock_acquire>
 8000e70:	69a3      	ldr	r3, [r4, #24]
 8000e72:	b11b      	cbz	r3, 8000e7c <__sinit+0x14>
 8000e74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000e78:	f7ff bff0 	b.w	8000e5c <__sinit_lock_release>
 8000e7c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000e80:	6523      	str	r3, [r4, #80]	; 0x50
 8000e82:	4b13      	ldr	r3, [pc, #76]	; (8000ed0 <__sinit+0x68>)
 8000e84:	4a13      	ldr	r2, [pc, #76]	; (8000ed4 <__sinit+0x6c>)
 8000e86:	681b      	ldr	r3, [r3, #0]
 8000e88:	62a2      	str	r2, [r4, #40]	; 0x28
 8000e8a:	42a3      	cmp	r3, r4
 8000e8c:	bf04      	itt	eq
 8000e8e:	2301      	moveq	r3, #1
 8000e90:	61a3      	streq	r3, [r4, #24]
 8000e92:	4620      	mov	r0, r4
 8000e94:	f000 f820 	bl	8000ed8 <__sfp>
 8000e98:	6060      	str	r0, [r4, #4]
 8000e9a:	4620      	mov	r0, r4
 8000e9c:	f000 f81c 	bl	8000ed8 <__sfp>
 8000ea0:	60a0      	str	r0, [r4, #8]
 8000ea2:	4620      	mov	r0, r4
 8000ea4:	f000 f818 	bl	8000ed8 <__sfp>
 8000ea8:	2200      	movs	r2, #0
 8000eaa:	60e0      	str	r0, [r4, #12]
 8000eac:	2104      	movs	r1, #4
 8000eae:	6860      	ldr	r0, [r4, #4]
 8000eb0:	f7ff ff82 	bl	8000db8 <std>
 8000eb4:	68a0      	ldr	r0, [r4, #8]
 8000eb6:	2201      	movs	r2, #1
 8000eb8:	2109      	movs	r1, #9
 8000eba:	f7ff ff7d 	bl	8000db8 <std>
 8000ebe:	68e0      	ldr	r0, [r4, #12]
 8000ec0:	2202      	movs	r2, #2
 8000ec2:	2112      	movs	r1, #18
 8000ec4:	f7ff ff78 	bl	8000db8 <std>
 8000ec8:	2301      	movs	r3, #1
 8000eca:	61a3      	str	r3, [r4, #24]
 8000ecc:	e7d2      	b.n	8000e74 <__sinit+0xc>
 8000ece:	bf00      	nop
 8000ed0:	08001cd4 	.word	0x08001cd4
 8000ed4:	08000e01 	.word	0x08000e01

08000ed8 <__sfp>:
 8000ed8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000eda:	4607      	mov	r7, r0
 8000edc:	f7ff ffac 	bl	8000e38 <__sfp_lock_acquire>
 8000ee0:	4b1e      	ldr	r3, [pc, #120]	; (8000f5c <__sfp+0x84>)
 8000ee2:	681e      	ldr	r6, [r3, #0]
 8000ee4:	69b3      	ldr	r3, [r6, #24]
 8000ee6:	b913      	cbnz	r3, 8000eee <__sfp+0x16>
 8000ee8:	4630      	mov	r0, r6
 8000eea:	f7ff ffbd 	bl	8000e68 <__sinit>
 8000eee:	3648      	adds	r6, #72	; 0x48
 8000ef0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000ef4:	3b01      	subs	r3, #1
 8000ef6:	d503      	bpl.n	8000f00 <__sfp+0x28>
 8000ef8:	6833      	ldr	r3, [r6, #0]
 8000efa:	b30b      	cbz	r3, 8000f40 <__sfp+0x68>
 8000efc:	6836      	ldr	r6, [r6, #0]
 8000efe:	e7f7      	b.n	8000ef0 <__sfp+0x18>
 8000f00:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000f04:	b9d5      	cbnz	r5, 8000f3c <__sfp+0x64>
 8000f06:	4b16      	ldr	r3, [pc, #88]	; (8000f60 <__sfp+0x88>)
 8000f08:	60e3      	str	r3, [r4, #12]
 8000f0a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000f0e:	6665      	str	r5, [r4, #100]	; 0x64
 8000f10:	f000 f847 	bl	8000fa2 <__retarget_lock_init_recursive>
 8000f14:	f7ff ff96 	bl	8000e44 <__sfp_lock_release>
 8000f18:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000f1c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000f20:	6025      	str	r5, [r4, #0]
 8000f22:	61a5      	str	r5, [r4, #24]
 8000f24:	2208      	movs	r2, #8
 8000f26:	4629      	mov	r1, r5
 8000f28:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000f2c:	f7ff ff24 	bl	8000d78 <memset>
 8000f30:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000f34:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000f38:	4620      	mov	r0, r4
 8000f3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f3c:	3468      	adds	r4, #104	; 0x68
 8000f3e:	e7d9      	b.n	8000ef4 <__sfp+0x1c>
 8000f40:	2104      	movs	r1, #4
 8000f42:	4638      	mov	r0, r7
 8000f44:	f7ff ff62 	bl	8000e0c <__sfmoreglue>
 8000f48:	4604      	mov	r4, r0
 8000f4a:	6030      	str	r0, [r6, #0]
 8000f4c:	2800      	cmp	r0, #0
 8000f4e:	d1d5      	bne.n	8000efc <__sfp+0x24>
 8000f50:	f7ff ff78 	bl	8000e44 <__sfp_lock_release>
 8000f54:	230c      	movs	r3, #12
 8000f56:	603b      	str	r3, [r7, #0]
 8000f58:	e7ee      	b.n	8000f38 <__sfp+0x60>
 8000f5a:	bf00      	nop
 8000f5c:	08001cd4 	.word	0x08001cd4
 8000f60:	ffff0001 	.word	0xffff0001

08000f64 <_fwalk_reent>:
 8000f64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000f68:	4606      	mov	r6, r0
 8000f6a:	4688      	mov	r8, r1
 8000f6c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000f70:	2700      	movs	r7, #0
 8000f72:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000f76:	f1b9 0901 	subs.w	r9, r9, #1
 8000f7a:	d505      	bpl.n	8000f88 <_fwalk_reent+0x24>
 8000f7c:	6824      	ldr	r4, [r4, #0]
 8000f7e:	2c00      	cmp	r4, #0
 8000f80:	d1f7      	bne.n	8000f72 <_fwalk_reent+0xe>
 8000f82:	4638      	mov	r0, r7
 8000f84:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000f88:	89ab      	ldrh	r3, [r5, #12]
 8000f8a:	2b01      	cmp	r3, #1
 8000f8c:	d907      	bls.n	8000f9e <_fwalk_reent+0x3a>
 8000f8e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000f92:	3301      	adds	r3, #1
 8000f94:	d003      	beq.n	8000f9e <_fwalk_reent+0x3a>
 8000f96:	4629      	mov	r1, r5
 8000f98:	4630      	mov	r0, r6
 8000f9a:	47c0      	blx	r8
 8000f9c:	4307      	orrs	r7, r0
 8000f9e:	3568      	adds	r5, #104	; 0x68
 8000fa0:	e7e9      	b.n	8000f76 <_fwalk_reent+0x12>

08000fa2 <__retarget_lock_init_recursive>:
 8000fa2:	4770      	bx	lr

08000fa4 <__retarget_lock_acquire_recursive>:
 8000fa4:	4770      	bx	lr

08000fa6 <__retarget_lock_release_recursive>:
 8000fa6:	4770      	bx	lr

08000fa8 <sbrk_aligned>:
 8000fa8:	b570      	push	{r4, r5, r6, lr}
 8000faa:	4e0e      	ldr	r6, [pc, #56]	; (8000fe4 <sbrk_aligned+0x3c>)
 8000fac:	460c      	mov	r4, r1
 8000fae:	6831      	ldr	r1, [r6, #0]
 8000fb0:	4605      	mov	r5, r0
 8000fb2:	b911      	cbnz	r1, 8000fba <sbrk_aligned+0x12>
 8000fb4:	f000 fb7a 	bl	80016ac <_sbrk_r>
 8000fb8:	6030      	str	r0, [r6, #0]
 8000fba:	4621      	mov	r1, r4
 8000fbc:	4628      	mov	r0, r5
 8000fbe:	f000 fb75 	bl	80016ac <_sbrk_r>
 8000fc2:	1c43      	adds	r3, r0, #1
 8000fc4:	d00a      	beq.n	8000fdc <sbrk_aligned+0x34>
 8000fc6:	1cc4      	adds	r4, r0, #3
 8000fc8:	f024 0403 	bic.w	r4, r4, #3
 8000fcc:	42a0      	cmp	r0, r4
 8000fce:	d007      	beq.n	8000fe0 <sbrk_aligned+0x38>
 8000fd0:	1a21      	subs	r1, r4, r0
 8000fd2:	4628      	mov	r0, r5
 8000fd4:	f000 fb6a 	bl	80016ac <_sbrk_r>
 8000fd8:	3001      	adds	r0, #1
 8000fda:	d101      	bne.n	8000fe0 <sbrk_aligned+0x38>
 8000fdc:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000fe0:	4620      	mov	r0, r4
 8000fe2:	bd70      	pop	{r4, r5, r6, pc}
 8000fe4:	20000094 	.word	0x20000094

08000fe8 <_malloc_r>:
 8000fe8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000fec:	1ccd      	adds	r5, r1, #3
 8000fee:	f025 0503 	bic.w	r5, r5, #3
 8000ff2:	3508      	adds	r5, #8
 8000ff4:	2d0c      	cmp	r5, #12
 8000ff6:	bf38      	it	cc
 8000ff8:	250c      	movcc	r5, #12
 8000ffa:	2d00      	cmp	r5, #0
 8000ffc:	4607      	mov	r7, r0
 8000ffe:	db01      	blt.n	8001004 <_malloc_r+0x1c>
 8001000:	42a9      	cmp	r1, r5
 8001002:	d905      	bls.n	8001010 <_malloc_r+0x28>
 8001004:	230c      	movs	r3, #12
 8001006:	603b      	str	r3, [r7, #0]
 8001008:	2600      	movs	r6, #0
 800100a:	4630      	mov	r0, r6
 800100c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001010:	4e2e      	ldr	r6, [pc, #184]	; (80010cc <_malloc_r+0xe4>)
 8001012:	f000 fdbb 	bl	8001b8c <__malloc_lock>
 8001016:	6833      	ldr	r3, [r6, #0]
 8001018:	461c      	mov	r4, r3
 800101a:	bb34      	cbnz	r4, 800106a <_malloc_r+0x82>
 800101c:	4629      	mov	r1, r5
 800101e:	4638      	mov	r0, r7
 8001020:	f7ff ffc2 	bl	8000fa8 <sbrk_aligned>
 8001024:	1c43      	adds	r3, r0, #1
 8001026:	4604      	mov	r4, r0
 8001028:	d14d      	bne.n	80010c6 <_malloc_r+0xde>
 800102a:	6834      	ldr	r4, [r6, #0]
 800102c:	4626      	mov	r6, r4
 800102e:	2e00      	cmp	r6, #0
 8001030:	d140      	bne.n	80010b4 <_malloc_r+0xcc>
 8001032:	6823      	ldr	r3, [r4, #0]
 8001034:	4631      	mov	r1, r6
 8001036:	4638      	mov	r0, r7
 8001038:	eb04 0803 	add.w	r8, r4, r3
 800103c:	f000 fb36 	bl	80016ac <_sbrk_r>
 8001040:	4580      	cmp	r8, r0
 8001042:	d13a      	bne.n	80010ba <_malloc_r+0xd2>
 8001044:	6821      	ldr	r1, [r4, #0]
 8001046:	3503      	adds	r5, #3
 8001048:	1a6d      	subs	r5, r5, r1
 800104a:	f025 0503 	bic.w	r5, r5, #3
 800104e:	3508      	adds	r5, #8
 8001050:	2d0c      	cmp	r5, #12
 8001052:	bf38      	it	cc
 8001054:	250c      	movcc	r5, #12
 8001056:	4629      	mov	r1, r5
 8001058:	4638      	mov	r0, r7
 800105a:	f7ff ffa5 	bl	8000fa8 <sbrk_aligned>
 800105e:	3001      	adds	r0, #1
 8001060:	d02b      	beq.n	80010ba <_malloc_r+0xd2>
 8001062:	6823      	ldr	r3, [r4, #0]
 8001064:	442b      	add	r3, r5
 8001066:	6023      	str	r3, [r4, #0]
 8001068:	e00e      	b.n	8001088 <_malloc_r+0xa0>
 800106a:	6822      	ldr	r2, [r4, #0]
 800106c:	1b52      	subs	r2, r2, r5
 800106e:	d41e      	bmi.n	80010ae <_malloc_r+0xc6>
 8001070:	2a0b      	cmp	r2, #11
 8001072:	d916      	bls.n	80010a2 <_malloc_r+0xba>
 8001074:	1961      	adds	r1, r4, r5
 8001076:	42a3      	cmp	r3, r4
 8001078:	6025      	str	r5, [r4, #0]
 800107a:	bf18      	it	ne
 800107c:	6059      	strne	r1, [r3, #4]
 800107e:	6863      	ldr	r3, [r4, #4]
 8001080:	bf08      	it	eq
 8001082:	6031      	streq	r1, [r6, #0]
 8001084:	5162      	str	r2, [r4, r5]
 8001086:	604b      	str	r3, [r1, #4]
 8001088:	4638      	mov	r0, r7
 800108a:	f104 060b 	add.w	r6, r4, #11
 800108e:	f000 fd83 	bl	8001b98 <__malloc_unlock>
 8001092:	f026 0607 	bic.w	r6, r6, #7
 8001096:	1d23      	adds	r3, r4, #4
 8001098:	1af2      	subs	r2, r6, r3
 800109a:	d0b6      	beq.n	800100a <_malloc_r+0x22>
 800109c:	1b9b      	subs	r3, r3, r6
 800109e:	50a3      	str	r3, [r4, r2]
 80010a0:	e7b3      	b.n	800100a <_malloc_r+0x22>
 80010a2:	6862      	ldr	r2, [r4, #4]
 80010a4:	42a3      	cmp	r3, r4
 80010a6:	bf0c      	ite	eq
 80010a8:	6032      	streq	r2, [r6, #0]
 80010aa:	605a      	strne	r2, [r3, #4]
 80010ac:	e7ec      	b.n	8001088 <_malloc_r+0xa0>
 80010ae:	4623      	mov	r3, r4
 80010b0:	6864      	ldr	r4, [r4, #4]
 80010b2:	e7b2      	b.n	800101a <_malloc_r+0x32>
 80010b4:	4634      	mov	r4, r6
 80010b6:	6876      	ldr	r6, [r6, #4]
 80010b8:	e7b9      	b.n	800102e <_malloc_r+0x46>
 80010ba:	230c      	movs	r3, #12
 80010bc:	603b      	str	r3, [r7, #0]
 80010be:	4638      	mov	r0, r7
 80010c0:	f000 fd6a 	bl	8001b98 <__malloc_unlock>
 80010c4:	e7a1      	b.n	800100a <_malloc_r+0x22>
 80010c6:	6025      	str	r5, [r4, #0]
 80010c8:	e7de      	b.n	8001088 <_malloc_r+0xa0>
 80010ca:	bf00      	nop
 80010cc:	20000090 	.word	0x20000090

080010d0 <__sfputc_r>:
 80010d0:	6893      	ldr	r3, [r2, #8]
 80010d2:	3b01      	subs	r3, #1
 80010d4:	2b00      	cmp	r3, #0
 80010d6:	b410      	push	{r4}
 80010d8:	6093      	str	r3, [r2, #8]
 80010da:	da08      	bge.n	80010ee <__sfputc_r+0x1e>
 80010dc:	6994      	ldr	r4, [r2, #24]
 80010de:	42a3      	cmp	r3, r4
 80010e0:	db01      	blt.n	80010e6 <__sfputc_r+0x16>
 80010e2:	290a      	cmp	r1, #10
 80010e4:	d103      	bne.n	80010ee <__sfputc_r+0x1e>
 80010e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80010ea:	f000 bb33 	b.w	8001754 <__swbuf_r>
 80010ee:	6813      	ldr	r3, [r2, #0]
 80010f0:	1c58      	adds	r0, r3, #1
 80010f2:	6010      	str	r0, [r2, #0]
 80010f4:	7019      	strb	r1, [r3, #0]
 80010f6:	4608      	mov	r0, r1
 80010f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80010fc:	4770      	bx	lr

080010fe <__sfputs_r>:
 80010fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001100:	4606      	mov	r6, r0
 8001102:	460f      	mov	r7, r1
 8001104:	4614      	mov	r4, r2
 8001106:	18d5      	adds	r5, r2, r3
 8001108:	42ac      	cmp	r4, r5
 800110a:	d101      	bne.n	8001110 <__sfputs_r+0x12>
 800110c:	2000      	movs	r0, #0
 800110e:	e007      	b.n	8001120 <__sfputs_r+0x22>
 8001110:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001114:	463a      	mov	r2, r7
 8001116:	4630      	mov	r0, r6
 8001118:	f7ff ffda 	bl	80010d0 <__sfputc_r>
 800111c:	1c43      	adds	r3, r0, #1
 800111e:	d1f3      	bne.n	8001108 <__sfputs_r+0xa>
 8001120:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001124 <_vfiprintf_r>:
 8001124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001128:	460d      	mov	r5, r1
 800112a:	b09d      	sub	sp, #116	; 0x74
 800112c:	4614      	mov	r4, r2
 800112e:	4698      	mov	r8, r3
 8001130:	4606      	mov	r6, r0
 8001132:	b118      	cbz	r0, 800113c <_vfiprintf_r+0x18>
 8001134:	6983      	ldr	r3, [r0, #24]
 8001136:	b90b      	cbnz	r3, 800113c <_vfiprintf_r+0x18>
 8001138:	f7ff fe96 	bl	8000e68 <__sinit>
 800113c:	4b89      	ldr	r3, [pc, #548]	; (8001364 <_vfiprintf_r+0x240>)
 800113e:	429d      	cmp	r5, r3
 8001140:	d11b      	bne.n	800117a <_vfiprintf_r+0x56>
 8001142:	6875      	ldr	r5, [r6, #4]
 8001144:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001146:	07d9      	lsls	r1, r3, #31
 8001148:	d405      	bmi.n	8001156 <_vfiprintf_r+0x32>
 800114a:	89ab      	ldrh	r3, [r5, #12]
 800114c:	059a      	lsls	r2, r3, #22
 800114e:	d402      	bmi.n	8001156 <_vfiprintf_r+0x32>
 8001150:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001152:	f7ff ff27 	bl	8000fa4 <__retarget_lock_acquire_recursive>
 8001156:	89ab      	ldrh	r3, [r5, #12]
 8001158:	071b      	lsls	r3, r3, #28
 800115a:	d501      	bpl.n	8001160 <_vfiprintf_r+0x3c>
 800115c:	692b      	ldr	r3, [r5, #16]
 800115e:	b9eb      	cbnz	r3, 800119c <_vfiprintf_r+0x78>
 8001160:	4629      	mov	r1, r5
 8001162:	4630      	mov	r0, r6
 8001164:	f000 fb5a 	bl	800181c <__swsetup_r>
 8001168:	b1c0      	cbz	r0, 800119c <_vfiprintf_r+0x78>
 800116a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800116c:	07dc      	lsls	r4, r3, #31
 800116e:	d50e      	bpl.n	800118e <_vfiprintf_r+0x6a>
 8001170:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001174:	b01d      	add	sp, #116	; 0x74
 8001176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800117a:	4b7b      	ldr	r3, [pc, #492]	; (8001368 <_vfiprintf_r+0x244>)
 800117c:	429d      	cmp	r5, r3
 800117e:	d101      	bne.n	8001184 <_vfiprintf_r+0x60>
 8001180:	68b5      	ldr	r5, [r6, #8]
 8001182:	e7df      	b.n	8001144 <_vfiprintf_r+0x20>
 8001184:	4b79      	ldr	r3, [pc, #484]	; (800136c <_vfiprintf_r+0x248>)
 8001186:	429d      	cmp	r5, r3
 8001188:	bf08      	it	eq
 800118a:	68f5      	ldreq	r5, [r6, #12]
 800118c:	e7da      	b.n	8001144 <_vfiprintf_r+0x20>
 800118e:	89ab      	ldrh	r3, [r5, #12]
 8001190:	0598      	lsls	r0, r3, #22
 8001192:	d4ed      	bmi.n	8001170 <_vfiprintf_r+0x4c>
 8001194:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001196:	f7ff ff06 	bl	8000fa6 <__retarget_lock_release_recursive>
 800119a:	e7e9      	b.n	8001170 <_vfiprintf_r+0x4c>
 800119c:	2300      	movs	r3, #0
 800119e:	9309      	str	r3, [sp, #36]	; 0x24
 80011a0:	2320      	movs	r3, #32
 80011a2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80011a6:	f8cd 800c 	str.w	r8, [sp, #12]
 80011aa:	2330      	movs	r3, #48	; 0x30
 80011ac:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001370 <_vfiprintf_r+0x24c>
 80011b0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80011b4:	f04f 0901 	mov.w	r9, #1
 80011b8:	4623      	mov	r3, r4
 80011ba:	469a      	mov	sl, r3
 80011bc:	f813 2b01 	ldrb.w	r2, [r3], #1
 80011c0:	b10a      	cbz	r2, 80011c6 <_vfiprintf_r+0xa2>
 80011c2:	2a25      	cmp	r2, #37	; 0x25
 80011c4:	d1f9      	bne.n	80011ba <_vfiprintf_r+0x96>
 80011c6:	ebba 0b04 	subs.w	fp, sl, r4
 80011ca:	d00b      	beq.n	80011e4 <_vfiprintf_r+0xc0>
 80011cc:	465b      	mov	r3, fp
 80011ce:	4622      	mov	r2, r4
 80011d0:	4629      	mov	r1, r5
 80011d2:	4630      	mov	r0, r6
 80011d4:	f7ff ff93 	bl	80010fe <__sfputs_r>
 80011d8:	3001      	adds	r0, #1
 80011da:	f000 80aa 	beq.w	8001332 <_vfiprintf_r+0x20e>
 80011de:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80011e0:	445a      	add	r2, fp
 80011e2:	9209      	str	r2, [sp, #36]	; 0x24
 80011e4:	f89a 3000 	ldrb.w	r3, [sl]
 80011e8:	2b00      	cmp	r3, #0
 80011ea:	f000 80a2 	beq.w	8001332 <_vfiprintf_r+0x20e>
 80011ee:	2300      	movs	r3, #0
 80011f0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80011f4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80011f8:	f10a 0a01 	add.w	sl, sl, #1
 80011fc:	9304      	str	r3, [sp, #16]
 80011fe:	9307      	str	r3, [sp, #28]
 8001200:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8001204:	931a      	str	r3, [sp, #104]	; 0x68
 8001206:	4654      	mov	r4, sl
 8001208:	2205      	movs	r2, #5
 800120a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800120e:	4858      	ldr	r0, [pc, #352]	; (8001370 <_vfiprintf_r+0x24c>)
 8001210:	f7fe fffe 	bl	8000210 <memchr>
 8001214:	9a04      	ldr	r2, [sp, #16]
 8001216:	b9d8      	cbnz	r0, 8001250 <_vfiprintf_r+0x12c>
 8001218:	06d1      	lsls	r1, r2, #27
 800121a:	bf44      	itt	mi
 800121c:	2320      	movmi	r3, #32
 800121e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001222:	0713      	lsls	r3, r2, #28
 8001224:	bf44      	itt	mi
 8001226:	232b      	movmi	r3, #43	; 0x2b
 8001228:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800122c:	f89a 3000 	ldrb.w	r3, [sl]
 8001230:	2b2a      	cmp	r3, #42	; 0x2a
 8001232:	d015      	beq.n	8001260 <_vfiprintf_r+0x13c>
 8001234:	9a07      	ldr	r2, [sp, #28]
 8001236:	4654      	mov	r4, sl
 8001238:	2000      	movs	r0, #0
 800123a:	f04f 0c0a 	mov.w	ip, #10
 800123e:	4621      	mov	r1, r4
 8001240:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001244:	3b30      	subs	r3, #48	; 0x30
 8001246:	2b09      	cmp	r3, #9
 8001248:	d94e      	bls.n	80012e8 <_vfiprintf_r+0x1c4>
 800124a:	b1b0      	cbz	r0, 800127a <_vfiprintf_r+0x156>
 800124c:	9207      	str	r2, [sp, #28]
 800124e:	e014      	b.n	800127a <_vfiprintf_r+0x156>
 8001250:	eba0 0308 	sub.w	r3, r0, r8
 8001254:	fa09 f303 	lsl.w	r3, r9, r3
 8001258:	4313      	orrs	r3, r2
 800125a:	9304      	str	r3, [sp, #16]
 800125c:	46a2      	mov	sl, r4
 800125e:	e7d2      	b.n	8001206 <_vfiprintf_r+0xe2>
 8001260:	9b03      	ldr	r3, [sp, #12]
 8001262:	1d19      	adds	r1, r3, #4
 8001264:	681b      	ldr	r3, [r3, #0]
 8001266:	9103      	str	r1, [sp, #12]
 8001268:	2b00      	cmp	r3, #0
 800126a:	bfbb      	ittet	lt
 800126c:	425b      	neglt	r3, r3
 800126e:	f042 0202 	orrlt.w	r2, r2, #2
 8001272:	9307      	strge	r3, [sp, #28]
 8001274:	9307      	strlt	r3, [sp, #28]
 8001276:	bfb8      	it	lt
 8001278:	9204      	strlt	r2, [sp, #16]
 800127a:	7823      	ldrb	r3, [r4, #0]
 800127c:	2b2e      	cmp	r3, #46	; 0x2e
 800127e:	d10c      	bne.n	800129a <_vfiprintf_r+0x176>
 8001280:	7863      	ldrb	r3, [r4, #1]
 8001282:	2b2a      	cmp	r3, #42	; 0x2a
 8001284:	d135      	bne.n	80012f2 <_vfiprintf_r+0x1ce>
 8001286:	9b03      	ldr	r3, [sp, #12]
 8001288:	1d1a      	adds	r2, r3, #4
 800128a:	681b      	ldr	r3, [r3, #0]
 800128c:	9203      	str	r2, [sp, #12]
 800128e:	2b00      	cmp	r3, #0
 8001290:	bfb8      	it	lt
 8001292:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8001296:	3402      	adds	r4, #2
 8001298:	9305      	str	r3, [sp, #20]
 800129a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8001380 <_vfiprintf_r+0x25c>
 800129e:	7821      	ldrb	r1, [r4, #0]
 80012a0:	2203      	movs	r2, #3
 80012a2:	4650      	mov	r0, sl
 80012a4:	f7fe ffb4 	bl	8000210 <memchr>
 80012a8:	b140      	cbz	r0, 80012bc <_vfiprintf_r+0x198>
 80012aa:	2340      	movs	r3, #64	; 0x40
 80012ac:	eba0 000a 	sub.w	r0, r0, sl
 80012b0:	fa03 f000 	lsl.w	r0, r3, r0
 80012b4:	9b04      	ldr	r3, [sp, #16]
 80012b6:	4303      	orrs	r3, r0
 80012b8:	3401      	adds	r4, #1
 80012ba:	9304      	str	r3, [sp, #16]
 80012bc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80012c0:	482c      	ldr	r0, [pc, #176]	; (8001374 <_vfiprintf_r+0x250>)
 80012c2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80012c6:	2206      	movs	r2, #6
 80012c8:	f7fe ffa2 	bl	8000210 <memchr>
 80012cc:	2800      	cmp	r0, #0
 80012ce:	d03f      	beq.n	8001350 <_vfiprintf_r+0x22c>
 80012d0:	4b29      	ldr	r3, [pc, #164]	; (8001378 <_vfiprintf_r+0x254>)
 80012d2:	bb1b      	cbnz	r3, 800131c <_vfiprintf_r+0x1f8>
 80012d4:	9b03      	ldr	r3, [sp, #12]
 80012d6:	3307      	adds	r3, #7
 80012d8:	f023 0307 	bic.w	r3, r3, #7
 80012dc:	3308      	adds	r3, #8
 80012de:	9303      	str	r3, [sp, #12]
 80012e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80012e2:	443b      	add	r3, r7
 80012e4:	9309      	str	r3, [sp, #36]	; 0x24
 80012e6:	e767      	b.n	80011b8 <_vfiprintf_r+0x94>
 80012e8:	fb0c 3202 	mla	r2, ip, r2, r3
 80012ec:	460c      	mov	r4, r1
 80012ee:	2001      	movs	r0, #1
 80012f0:	e7a5      	b.n	800123e <_vfiprintf_r+0x11a>
 80012f2:	2300      	movs	r3, #0
 80012f4:	3401      	adds	r4, #1
 80012f6:	9305      	str	r3, [sp, #20]
 80012f8:	4619      	mov	r1, r3
 80012fa:	f04f 0c0a 	mov.w	ip, #10
 80012fe:	4620      	mov	r0, r4
 8001300:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001304:	3a30      	subs	r2, #48	; 0x30
 8001306:	2a09      	cmp	r2, #9
 8001308:	d903      	bls.n	8001312 <_vfiprintf_r+0x1ee>
 800130a:	2b00      	cmp	r3, #0
 800130c:	d0c5      	beq.n	800129a <_vfiprintf_r+0x176>
 800130e:	9105      	str	r1, [sp, #20]
 8001310:	e7c3      	b.n	800129a <_vfiprintf_r+0x176>
 8001312:	fb0c 2101 	mla	r1, ip, r1, r2
 8001316:	4604      	mov	r4, r0
 8001318:	2301      	movs	r3, #1
 800131a:	e7f0      	b.n	80012fe <_vfiprintf_r+0x1da>
 800131c:	ab03      	add	r3, sp, #12
 800131e:	9300      	str	r3, [sp, #0]
 8001320:	462a      	mov	r2, r5
 8001322:	4b16      	ldr	r3, [pc, #88]	; (800137c <_vfiprintf_r+0x258>)
 8001324:	a904      	add	r1, sp, #16
 8001326:	4630      	mov	r0, r6
 8001328:	f3af 8000 	nop.w
 800132c:	4607      	mov	r7, r0
 800132e:	1c78      	adds	r0, r7, #1
 8001330:	d1d6      	bne.n	80012e0 <_vfiprintf_r+0x1bc>
 8001332:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001334:	07d9      	lsls	r1, r3, #31
 8001336:	d405      	bmi.n	8001344 <_vfiprintf_r+0x220>
 8001338:	89ab      	ldrh	r3, [r5, #12]
 800133a:	059a      	lsls	r2, r3, #22
 800133c:	d402      	bmi.n	8001344 <_vfiprintf_r+0x220>
 800133e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001340:	f7ff fe31 	bl	8000fa6 <__retarget_lock_release_recursive>
 8001344:	89ab      	ldrh	r3, [r5, #12]
 8001346:	065b      	lsls	r3, r3, #25
 8001348:	f53f af12 	bmi.w	8001170 <_vfiprintf_r+0x4c>
 800134c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800134e:	e711      	b.n	8001174 <_vfiprintf_r+0x50>
 8001350:	ab03      	add	r3, sp, #12
 8001352:	9300      	str	r3, [sp, #0]
 8001354:	462a      	mov	r2, r5
 8001356:	4b09      	ldr	r3, [pc, #36]	; (800137c <_vfiprintf_r+0x258>)
 8001358:	a904      	add	r1, sp, #16
 800135a:	4630      	mov	r0, r6
 800135c:	f000 f880 	bl	8001460 <_printf_i>
 8001360:	e7e4      	b.n	800132c <_vfiprintf_r+0x208>
 8001362:	bf00      	nop
 8001364:	08001cf8 	.word	0x08001cf8
 8001368:	08001d18 	.word	0x08001d18
 800136c:	08001cd8 	.word	0x08001cd8
 8001370:	08001d38 	.word	0x08001d38
 8001374:	08001d42 	.word	0x08001d42
 8001378:	00000000 	.word	0x00000000
 800137c:	080010ff 	.word	0x080010ff
 8001380:	08001d3e 	.word	0x08001d3e

08001384 <_printf_common>:
 8001384:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001388:	4616      	mov	r6, r2
 800138a:	4699      	mov	r9, r3
 800138c:	688a      	ldr	r2, [r1, #8]
 800138e:	690b      	ldr	r3, [r1, #16]
 8001390:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001394:	4293      	cmp	r3, r2
 8001396:	bfb8      	it	lt
 8001398:	4613      	movlt	r3, r2
 800139a:	6033      	str	r3, [r6, #0]
 800139c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80013a0:	4607      	mov	r7, r0
 80013a2:	460c      	mov	r4, r1
 80013a4:	b10a      	cbz	r2, 80013aa <_printf_common+0x26>
 80013a6:	3301      	adds	r3, #1
 80013a8:	6033      	str	r3, [r6, #0]
 80013aa:	6823      	ldr	r3, [r4, #0]
 80013ac:	0699      	lsls	r1, r3, #26
 80013ae:	bf42      	ittt	mi
 80013b0:	6833      	ldrmi	r3, [r6, #0]
 80013b2:	3302      	addmi	r3, #2
 80013b4:	6033      	strmi	r3, [r6, #0]
 80013b6:	6825      	ldr	r5, [r4, #0]
 80013b8:	f015 0506 	ands.w	r5, r5, #6
 80013bc:	d106      	bne.n	80013cc <_printf_common+0x48>
 80013be:	f104 0a19 	add.w	sl, r4, #25
 80013c2:	68e3      	ldr	r3, [r4, #12]
 80013c4:	6832      	ldr	r2, [r6, #0]
 80013c6:	1a9b      	subs	r3, r3, r2
 80013c8:	42ab      	cmp	r3, r5
 80013ca:	dc26      	bgt.n	800141a <_printf_common+0x96>
 80013cc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80013d0:	1e13      	subs	r3, r2, #0
 80013d2:	6822      	ldr	r2, [r4, #0]
 80013d4:	bf18      	it	ne
 80013d6:	2301      	movne	r3, #1
 80013d8:	0692      	lsls	r2, r2, #26
 80013da:	d42b      	bmi.n	8001434 <_printf_common+0xb0>
 80013dc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80013e0:	4649      	mov	r1, r9
 80013e2:	4638      	mov	r0, r7
 80013e4:	47c0      	blx	r8
 80013e6:	3001      	adds	r0, #1
 80013e8:	d01e      	beq.n	8001428 <_printf_common+0xa4>
 80013ea:	6823      	ldr	r3, [r4, #0]
 80013ec:	68e5      	ldr	r5, [r4, #12]
 80013ee:	6832      	ldr	r2, [r6, #0]
 80013f0:	f003 0306 	and.w	r3, r3, #6
 80013f4:	2b04      	cmp	r3, #4
 80013f6:	bf08      	it	eq
 80013f8:	1aad      	subeq	r5, r5, r2
 80013fa:	68a3      	ldr	r3, [r4, #8]
 80013fc:	6922      	ldr	r2, [r4, #16]
 80013fe:	bf0c      	ite	eq
 8001400:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001404:	2500      	movne	r5, #0
 8001406:	4293      	cmp	r3, r2
 8001408:	bfc4      	itt	gt
 800140a:	1a9b      	subgt	r3, r3, r2
 800140c:	18ed      	addgt	r5, r5, r3
 800140e:	2600      	movs	r6, #0
 8001410:	341a      	adds	r4, #26
 8001412:	42b5      	cmp	r5, r6
 8001414:	d11a      	bne.n	800144c <_printf_common+0xc8>
 8001416:	2000      	movs	r0, #0
 8001418:	e008      	b.n	800142c <_printf_common+0xa8>
 800141a:	2301      	movs	r3, #1
 800141c:	4652      	mov	r2, sl
 800141e:	4649      	mov	r1, r9
 8001420:	4638      	mov	r0, r7
 8001422:	47c0      	blx	r8
 8001424:	3001      	adds	r0, #1
 8001426:	d103      	bne.n	8001430 <_printf_common+0xac>
 8001428:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800142c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001430:	3501      	adds	r5, #1
 8001432:	e7c6      	b.n	80013c2 <_printf_common+0x3e>
 8001434:	18e1      	adds	r1, r4, r3
 8001436:	1c5a      	adds	r2, r3, #1
 8001438:	2030      	movs	r0, #48	; 0x30
 800143a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800143e:	4422      	add	r2, r4
 8001440:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001444:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001448:	3302      	adds	r3, #2
 800144a:	e7c7      	b.n	80013dc <_printf_common+0x58>
 800144c:	2301      	movs	r3, #1
 800144e:	4622      	mov	r2, r4
 8001450:	4649      	mov	r1, r9
 8001452:	4638      	mov	r0, r7
 8001454:	47c0      	blx	r8
 8001456:	3001      	adds	r0, #1
 8001458:	d0e6      	beq.n	8001428 <_printf_common+0xa4>
 800145a:	3601      	adds	r6, #1
 800145c:	e7d9      	b.n	8001412 <_printf_common+0x8e>
	...

08001460 <_printf_i>:
 8001460:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001464:	7e0f      	ldrb	r7, [r1, #24]
 8001466:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001468:	2f78      	cmp	r7, #120	; 0x78
 800146a:	4691      	mov	r9, r2
 800146c:	4680      	mov	r8, r0
 800146e:	460c      	mov	r4, r1
 8001470:	469a      	mov	sl, r3
 8001472:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001476:	d807      	bhi.n	8001488 <_printf_i+0x28>
 8001478:	2f62      	cmp	r7, #98	; 0x62
 800147a:	d80a      	bhi.n	8001492 <_printf_i+0x32>
 800147c:	2f00      	cmp	r7, #0
 800147e:	f000 80d8 	beq.w	8001632 <_printf_i+0x1d2>
 8001482:	2f58      	cmp	r7, #88	; 0x58
 8001484:	f000 80a3 	beq.w	80015ce <_printf_i+0x16e>
 8001488:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800148c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001490:	e03a      	b.n	8001508 <_printf_i+0xa8>
 8001492:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001496:	2b15      	cmp	r3, #21
 8001498:	d8f6      	bhi.n	8001488 <_printf_i+0x28>
 800149a:	a101      	add	r1, pc, #4	; (adr r1, 80014a0 <_printf_i+0x40>)
 800149c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80014a0:	080014f9 	.word	0x080014f9
 80014a4:	0800150d 	.word	0x0800150d
 80014a8:	08001489 	.word	0x08001489
 80014ac:	08001489 	.word	0x08001489
 80014b0:	08001489 	.word	0x08001489
 80014b4:	08001489 	.word	0x08001489
 80014b8:	0800150d 	.word	0x0800150d
 80014bc:	08001489 	.word	0x08001489
 80014c0:	08001489 	.word	0x08001489
 80014c4:	08001489 	.word	0x08001489
 80014c8:	08001489 	.word	0x08001489
 80014cc:	08001619 	.word	0x08001619
 80014d0:	0800153d 	.word	0x0800153d
 80014d4:	080015fb 	.word	0x080015fb
 80014d8:	08001489 	.word	0x08001489
 80014dc:	08001489 	.word	0x08001489
 80014e0:	0800163b 	.word	0x0800163b
 80014e4:	08001489 	.word	0x08001489
 80014e8:	0800153d 	.word	0x0800153d
 80014ec:	08001489 	.word	0x08001489
 80014f0:	08001489 	.word	0x08001489
 80014f4:	08001603 	.word	0x08001603
 80014f8:	682b      	ldr	r3, [r5, #0]
 80014fa:	1d1a      	adds	r2, r3, #4
 80014fc:	681b      	ldr	r3, [r3, #0]
 80014fe:	602a      	str	r2, [r5, #0]
 8001500:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001504:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001508:	2301      	movs	r3, #1
 800150a:	e0a3      	b.n	8001654 <_printf_i+0x1f4>
 800150c:	6820      	ldr	r0, [r4, #0]
 800150e:	6829      	ldr	r1, [r5, #0]
 8001510:	0606      	lsls	r6, r0, #24
 8001512:	f101 0304 	add.w	r3, r1, #4
 8001516:	d50a      	bpl.n	800152e <_printf_i+0xce>
 8001518:	680e      	ldr	r6, [r1, #0]
 800151a:	602b      	str	r3, [r5, #0]
 800151c:	2e00      	cmp	r6, #0
 800151e:	da03      	bge.n	8001528 <_printf_i+0xc8>
 8001520:	232d      	movs	r3, #45	; 0x2d
 8001522:	4276      	negs	r6, r6
 8001524:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001528:	485e      	ldr	r0, [pc, #376]	; (80016a4 <_printf_i+0x244>)
 800152a:	230a      	movs	r3, #10
 800152c:	e019      	b.n	8001562 <_printf_i+0x102>
 800152e:	680e      	ldr	r6, [r1, #0]
 8001530:	602b      	str	r3, [r5, #0]
 8001532:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001536:	bf18      	it	ne
 8001538:	b236      	sxthne	r6, r6
 800153a:	e7ef      	b.n	800151c <_printf_i+0xbc>
 800153c:	682b      	ldr	r3, [r5, #0]
 800153e:	6820      	ldr	r0, [r4, #0]
 8001540:	1d19      	adds	r1, r3, #4
 8001542:	6029      	str	r1, [r5, #0]
 8001544:	0601      	lsls	r1, r0, #24
 8001546:	d501      	bpl.n	800154c <_printf_i+0xec>
 8001548:	681e      	ldr	r6, [r3, #0]
 800154a:	e002      	b.n	8001552 <_printf_i+0xf2>
 800154c:	0646      	lsls	r6, r0, #25
 800154e:	d5fb      	bpl.n	8001548 <_printf_i+0xe8>
 8001550:	881e      	ldrh	r6, [r3, #0]
 8001552:	4854      	ldr	r0, [pc, #336]	; (80016a4 <_printf_i+0x244>)
 8001554:	2f6f      	cmp	r7, #111	; 0x6f
 8001556:	bf0c      	ite	eq
 8001558:	2308      	moveq	r3, #8
 800155a:	230a      	movne	r3, #10
 800155c:	2100      	movs	r1, #0
 800155e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001562:	6865      	ldr	r5, [r4, #4]
 8001564:	60a5      	str	r5, [r4, #8]
 8001566:	2d00      	cmp	r5, #0
 8001568:	bfa2      	ittt	ge
 800156a:	6821      	ldrge	r1, [r4, #0]
 800156c:	f021 0104 	bicge.w	r1, r1, #4
 8001570:	6021      	strge	r1, [r4, #0]
 8001572:	b90e      	cbnz	r6, 8001578 <_printf_i+0x118>
 8001574:	2d00      	cmp	r5, #0
 8001576:	d04d      	beq.n	8001614 <_printf_i+0x1b4>
 8001578:	4615      	mov	r5, r2
 800157a:	fbb6 f1f3 	udiv	r1, r6, r3
 800157e:	fb03 6711 	mls	r7, r3, r1, r6
 8001582:	5dc7      	ldrb	r7, [r0, r7]
 8001584:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001588:	4637      	mov	r7, r6
 800158a:	42bb      	cmp	r3, r7
 800158c:	460e      	mov	r6, r1
 800158e:	d9f4      	bls.n	800157a <_printf_i+0x11a>
 8001590:	2b08      	cmp	r3, #8
 8001592:	d10b      	bne.n	80015ac <_printf_i+0x14c>
 8001594:	6823      	ldr	r3, [r4, #0]
 8001596:	07de      	lsls	r6, r3, #31
 8001598:	d508      	bpl.n	80015ac <_printf_i+0x14c>
 800159a:	6923      	ldr	r3, [r4, #16]
 800159c:	6861      	ldr	r1, [r4, #4]
 800159e:	4299      	cmp	r1, r3
 80015a0:	bfde      	ittt	le
 80015a2:	2330      	movle	r3, #48	; 0x30
 80015a4:	f805 3c01 	strble.w	r3, [r5, #-1]
 80015a8:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80015ac:	1b52      	subs	r2, r2, r5
 80015ae:	6122      	str	r2, [r4, #16]
 80015b0:	f8cd a000 	str.w	sl, [sp]
 80015b4:	464b      	mov	r3, r9
 80015b6:	aa03      	add	r2, sp, #12
 80015b8:	4621      	mov	r1, r4
 80015ba:	4640      	mov	r0, r8
 80015bc:	f7ff fee2 	bl	8001384 <_printf_common>
 80015c0:	3001      	adds	r0, #1
 80015c2:	d14c      	bne.n	800165e <_printf_i+0x1fe>
 80015c4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80015c8:	b004      	add	sp, #16
 80015ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80015ce:	4835      	ldr	r0, [pc, #212]	; (80016a4 <_printf_i+0x244>)
 80015d0:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80015d4:	6829      	ldr	r1, [r5, #0]
 80015d6:	6823      	ldr	r3, [r4, #0]
 80015d8:	f851 6b04 	ldr.w	r6, [r1], #4
 80015dc:	6029      	str	r1, [r5, #0]
 80015de:	061d      	lsls	r5, r3, #24
 80015e0:	d514      	bpl.n	800160c <_printf_i+0x1ac>
 80015e2:	07df      	lsls	r7, r3, #31
 80015e4:	bf44      	itt	mi
 80015e6:	f043 0320 	orrmi.w	r3, r3, #32
 80015ea:	6023      	strmi	r3, [r4, #0]
 80015ec:	b91e      	cbnz	r6, 80015f6 <_printf_i+0x196>
 80015ee:	6823      	ldr	r3, [r4, #0]
 80015f0:	f023 0320 	bic.w	r3, r3, #32
 80015f4:	6023      	str	r3, [r4, #0]
 80015f6:	2310      	movs	r3, #16
 80015f8:	e7b0      	b.n	800155c <_printf_i+0xfc>
 80015fa:	6823      	ldr	r3, [r4, #0]
 80015fc:	f043 0320 	orr.w	r3, r3, #32
 8001600:	6023      	str	r3, [r4, #0]
 8001602:	2378      	movs	r3, #120	; 0x78
 8001604:	4828      	ldr	r0, [pc, #160]	; (80016a8 <_printf_i+0x248>)
 8001606:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800160a:	e7e3      	b.n	80015d4 <_printf_i+0x174>
 800160c:	0659      	lsls	r1, r3, #25
 800160e:	bf48      	it	mi
 8001610:	b2b6      	uxthmi	r6, r6
 8001612:	e7e6      	b.n	80015e2 <_printf_i+0x182>
 8001614:	4615      	mov	r5, r2
 8001616:	e7bb      	b.n	8001590 <_printf_i+0x130>
 8001618:	682b      	ldr	r3, [r5, #0]
 800161a:	6826      	ldr	r6, [r4, #0]
 800161c:	6961      	ldr	r1, [r4, #20]
 800161e:	1d18      	adds	r0, r3, #4
 8001620:	6028      	str	r0, [r5, #0]
 8001622:	0635      	lsls	r5, r6, #24
 8001624:	681b      	ldr	r3, [r3, #0]
 8001626:	d501      	bpl.n	800162c <_printf_i+0x1cc>
 8001628:	6019      	str	r1, [r3, #0]
 800162a:	e002      	b.n	8001632 <_printf_i+0x1d2>
 800162c:	0670      	lsls	r0, r6, #25
 800162e:	d5fb      	bpl.n	8001628 <_printf_i+0x1c8>
 8001630:	8019      	strh	r1, [r3, #0]
 8001632:	2300      	movs	r3, #0
 8001634:	6123      	str	r3, [r4, #16]
 8001636:	4615      	mov	r5, r2
 8001638:	e7ba      	b.n	80015b0 <_printf_i+0x150>
 800163a:	682b      	ldr	r3, [r5, #0]
 800163c:	1d1a      	adds	r2, r3, #4
 800163e:	602a      	str	r2, [r5, #0]
 8001640:	681d      	ldr	r5, [r3, #0]
 8001642:	6862      	ldr	r2, [r4, #4]
 8001644:	2100      	movs	r1, #0
 8001646:	4628      	mov	r0, r5
 8001648:	f7fe fde2 	bl	8000210 <memchr>
 800164c:	b108      	cbz	r0, 8001652 <_printf_i+0x1f2>
 800164e:	1b40      	subs	r0, r0, r5
 8001650:	6060      	str	r0, [r4, #4]
 8001652:	6863      	ldr	r3, [r4, #4]
 8001654:	6123      	str	r3, [r4, #16]
 8001656:	2300      	movs	r3, #0
 8001658:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800165c:	e7a8      	b.n	80015b0 <_printf_i+0x150>
 800165e:	6923      	ldr	r3, [r4, #16]
 8001660:	462a      	mov	r2, r5
 8001662:	4649      	mov	r1, r9
 8001664:	4640      	mov	r0, r8
 8001666:	47d0      	blx	sl
 8001668:	3001      	adds	r0, #1
 800166a:	d0ab      	beq.n	80015c4 <_printf_i+0x164>
 800166c:	6823      	ldr	r3, [r4, #0]
 800166e:	079b      	lsls	r3, r3, #30
 8001670:	d413      	bmi.n	800169a <_printf_i+0x23a>
 8001672:	68e0      	ldr	r0, [r4, #12]
 8001674:	9b03      	ldr	r3, [sp, #12]
 8001676:	4298      	cmp	r0, r3
 8001678:	bfb8      	it	lt
 800167a:	4618      	movlt	r0, r3
 800167c:	e7a4      	b.n	80015c8 <_printf_i+0x168>
 800167e:	2301      	movs	r3, #1
 8001680:	4632      	mov	r2, r6
 8001682:	4649      	mov	r1, r9
 8001684:	4640      	mov	r0, r8
 8001686:	47d0      	blx	sl
 8001688:	3001      	adds	r0, #1
 800168a:	d09b      	beq.n	80015c4 <_printf_i+0x164>
 800168c:	3501      	adds	r5, #1
 800168e:	68e3      	ldr	r3, [r4, #12]
 8001690:	9903      	ldr	r1, [sp, #12]
 8001692:	1a5b      	subs	r3, r3, r1
 8001694:	42ab      	cmp	r3, r5
 8001696:	dcf2      	bgt.n	800167e <_printf_i+0x21e>
 8001698:	e7eb      	b.n	8001672 <_printf_i+0x212>
 800169a:	2500      	movs	r5, #0
 800169c:	f104 0619 	add.w	r6, r4, #25
 80016a0:	e7f5      	b.n	800168e <_printf_i+0x22e>
 80016a2:	bf00      	nop
 80016a4:	08001d49 	.word	0x08001d49
 80016a8:	08001d5a 	.word	0x08001d5a

080016ac <_sbrk_r>:
 80016ac:	b538      	push	{r3, r4, r5, lr}
 80016ae:	4d06      	ldr	r5, [pc, #24]	; (80016c8 <_sbrk_r+0x1c>)
 80016b0:	2300      	movs	r3, #0
 80016b2:	4604      	mov	r4, r0
 80016b4:	4608      	mov	r0, r1
 80016b6:	602b      	str	r3, [r5, #0]
 80016b8:	f7ff fa26 	bl	8000b08 <_sbrk>
 80016bc:	1c43      	adds	r3, r0, #1
 80016be:	d102      	bne.n	80016c6 <_sbrk_r+0x1a>
 80016c0:	682b      	ldr	r3, [r5, #0]
 80016c2:	b103      	cbz	r3, 80016c6 <_sbrk_r+0x1a>
 80016c4:	6023      	str	r3, [r4, #0]
 80016c6:	bd38      	pop	{r3, r4, r5, pc}
 80016c8:	20000098 	.word	0x20000098

080016cc <__sread>:
 80016cc:	b510      	push	{r4, lr}
 80016ce:	460c      	mov	r4, r1
 80016d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80016d4:	f000 fab2 	bl	8001c3c <_read_r>
 80016d8:	2800      	cmp	r0, #0
 80016da:	bfab      	itete	ge
 80016dc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80016de:	89a3      	ldrhlt	r3, [r4, #12]
 80016e0:	181b      	addge	r3, r3, r0
 80016e2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80016e6:	bfac      	ite	ge
 80016e8:	6563      	strge	r3, [r4, #84]	; 0x54
 80016ea:	81a3      	strhlt	r3, [r4, #12]
 80016ec:	bd10      	pop	{r4, pc}

080016ee <__swrite>:
 80016ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80016f2:	461f      	mov	r7, r3
 80016f4:	898b      	ldrh	r3, [r1, #12]
 80016f6:	05db      	lsls	r3, r3, #23
 80016f8:	4605      	mov	r5, r0
 80016fa:	460c      	mov	r4, r1
 80016fc:	4616      	mov	r6, r2
 80016fe:	d505      	bpl.n	800170c <__swrite+0x1e>
 8001700:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001704:	2302      	movs	r3, #2
 8001706:	2200      	movs	r2, #0
 8001708:	f000 f9c8 	bl	8001a9c <_lseek_r>
 800170c:	89a3      	ldrh	r3, [r4, #12]
 800170e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001712:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001716:	81a3      	strh	r3, [r4, #12]
 8001718:	4632      	mov	r2, r6
 800171a:	463b      	mov	r3, r7
 800171c:	4628      	mov	r0, r5
 800171e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001722:	f000 b869 	b.w	80017f8 <_write_r>

08001726 <__sseek>:
 8001726:	b510      	push	{r4, lr}
 8001728:	460c      	mov	r4, r1
 800172a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800172e:	f000 f9b5 	bl	8001a9c <_lseek_r>
 8001732:	1c43      	adds	r3, r0, #1
 8001734:	89a3      	ldrh	r3, [r4, #12]
 8001736:	bf15      	itete	ne
 8001738:	6560      	strne	r0, [r4, #84]	; 0x54
 800173a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800173e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001742:	81a3      	strheq	r3, [r4, #12]
 8001744:	bf18      	it	ne
 8001746:	81a3      	strhne	r3, [r4, #12]
 8001748:	bd10      	pop	{r4, pc}

0800174a <__sclose>:
 800174a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800174e:	f000 b8d3 	b.w	80018f8 <_close_r>
	...

08001754 <__swbuf_r>:
 8001754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001756:	460e      	mov	r6, r1
 8001758:	4614      	mov	r4, r2
 800175a:	4605      	mov	r5, r0
 800175c:	b118      	cbz	r0, 8001766 <__swbuf_r+0x12>
 800175e:	6983      	ldr	r3, [r0, #24]
 8001760:	b90b      	cbnz	r3, 8001766 <__swbuf_r+0x12>
 8001762:	f7ff fb81 	bl	8000e68 <__sinit>
 8001766:	4b21      	ldr	r3, [pc, #132]	; (80017ec <__swbuf_r+0x98>)
 8001768:	429c      	cmp	r4, r3
 800176a:	d12b      	bne.n	80017c4 <__swbuf_r+0x70>
 800176c:	686c      	ldr	r4, [r5, #4]
 800176e:	69a3      	ldr	r3, [r4, #24]
 8001770:	60a3      	str	r3, [r4, #8]
 8001772:	89a3      	ldrh	r3, [r4, #12]
 8001774:	071a      	lsls	r2, r3, #28
 8001776:	d52f      	bpl.n	80017d8 <__swbuf_r+0x84>
 8001778:	6923      	ldr	r3, [r4, #16]
 800177a:	b36b      	cbz	r3, 80017d8 <__swbuf_r+0x84>
 800177c:	6923      	ldr	r3, [r4, #16]
 800177e:	6820      	ldr	r0, [r4, #0]
 8001780:	1ac0      	subs	r0, r0, r3
 8001782:	6963      	ldr	r3, [r4, #20]
 8001784:	b2f6      	uxtb	r6, r6
 8001786:	4283      	cmp	r3, r0
 8001788:	4637      	mov	r7, r6
 800178a:	dc04      	bgt.n	8001796 <__swbuf_r+0x42>
 800178c:	4621      	mov	r1, r4
 800178e:	4628      	mov	r0, r5
 8001790:	f000 f948 	bl	8001a24 <_fflush_r>
 8001794:	bb30      	cbnz	r0, 80017e4 <__swbuf_r+0x90>
 8001796:	68a3      	ldr	r3, [r4, #8]
 8001798:	3b01      	subs	r3, #1
 800179a:	60a3      	str	r3, [r4, #8]
 800179c:	6823      	ldr	r3, [r4, #0]
 800179e:	1c5a      	adds	r2, r3, #1
 80017a0:	6022      	str	r2, [r4, #0]
 80017a2:	701e      	strb	r6, [r3, #0]
 80017a4:	6963      	ldr	r3, [r4, #20]
 80017a6:	3001      	adds	r0, #1
 80017a8:	4283      	cmp	r3, r0
 80017aa:	d004      	beq.n	80017b6 <__swbuf_r+0x62>
 80017ac:	89a3      	ldrh	r3, [r4, #12]
 80017ae:	07db      	lsls	r3, r3, #31
 80017b0:	d506      	bpl.n	80017c0 <__swbuf_r+0x6c>
 80017b2:	2e0a      	cmp	r6, #10
 80017b4:	d104      	bne.n	80017c0 <__swbuf_r+0x6c>
 80017b6:	4621      	mov	r1, r4
 80017b8:	4628      	mov	r0, r5
 80017ba:	f000 f933 	bl	8001a24 <_fflush_r>
 80017be:	b988      	cbnz	r0, 80017e4 <__swbuf_r+0x90>
 80017c0:	4638      	mov	r0, r7
 80017c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80017c4:	4b0a      	ldr	r3, [pc, #40]	; (80017f0 <__swbuf_r+0x9c>)
 80017c6:	429c      	cmp	r4, r3
 80017c8:	d101      	bne.n	80017ce <__swbuf_r+0x7a>
 80017ca:	68ac      	ldr	r4, [r5, #8]
 80017cc:	e7cf      	b.n	800176e <__swbuf_r+0x1a>
 80017ce:	4b09      	ldr	r3, [pc, #36]	; (80017f4 <__swbuf_r+0xa0>)
 80017d0:	429c      	cmp	r4, r3
 80017d2:	bf08      	it	eq
 80017d4:	68ec      	ldreq	r4, [r5, #12]
 80017d6:	e7ca      	b.n	800176e <__swbuf_r+0x1a>
 80017d8:	4621      	mov	r1, r4
 80017da:	4628      	mov	r0, r5
 80017dc:	f000 f81e 	bl	800181c <__swsetup_r>
 80017e0:	2800      	cmp	r0, #0
 80017e2:	d0cb      	beq.n	800177c <__swbuf_r+0x28>
 80017e4:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80017e8:	e7ea      	b.n	80017c0 <__swbuf_r+0x6c>
 80017ea:	bf00      	nop
 80017ec:	08001cf8 	.word	0x08001cf8
 80017f0:	08001d18 	.word	0x08001d18
 80017f4:	08001cd8 	.word	0x08001cd8

080017f8 <_write_r>:
 80017f8:	b538      	push	{r3, r4, r5, lr}
 80017fa:	4d07      	ldr	r5, [pc, #28]	; (8001818 <_write_r+0x20>)
 80017fc:	4604      	mov	r4, r0
 80017fe:	4608      	mov	r0, r1
 8001800:	4611      	mov	r1, r2
 8001802:	2200      	movs	r2, #0
 8001804:	602a      	str	r2, [r5, #0]
 8001806:	461a      	mov	r2, r3
 8001808:	f7ff f92d 	bl	8000a66 <_write>
 800180c:	1c43      	adds	r3, r0, #1
 800180e:	d102      	bne.n	8001816 <_write_r+0x1e>
 8001810:	682b      	ldr	r3, [r5, #0]
 8001812:	b103      	cbz	r3, 8001816 <_write_r+0x1e>
 8001814:	6023      	str	r3, [r4, #0]
 8001816:	bd38      	pop	{r3, r4, r5, pc}
 8001818:	20000098 	.word	0x20000098

0800181c <__swsetup_r>:
 800181c:	4b32      	ldr	r3, [pc, #200]	; (80018e8 <__swsetup_r+0xcc>)
 800181e:	b570      	push	{r4, r5, r6, lr}
 8001820:	681d      	ldr	r5, [r3, #0]
 8001822:	4606      	mov	r6, r0
 8001824:	460c      	mov	r4, r1
 8001826:	b125      	cbz	r5, 8001832 <__swsetup_r+0x16>
 8001828:	69ab      	ldr	r3, [r5, #24]
 800182a:	b913      	cbnz	r3, 8001832 <__swsetup_r+0x16>
 800182c:	4628      	mov	r0, r5
 800182e:	f7ff fb1b 	bl	8000e68 <__sinit>
 8001832:	4b2e      	ldr	r3, [pc, #184]	; (80018ec <__swsetup_r+0xd0>)
 8001834:	429c      	cmp	r4, r3
 8001836:	d10f      	bne.n	8001858 <__swsetup_r+0x3c>
 8001838:	686c      	ldr	r4, [r5, #4]
 800183a:	89a3      	ldrh	r3, [r4, #12]
 800183c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001840:	0719      	lsls	r1, r3, #28
 8001842:	d42c      	bmi.n	800189e <__swsetup_r+0x82>
 8001844:	06dd      	lsls	r5, r3, #27
 8001846:	d411      	bmi.n	800186c <__swsetup_r+0x50>
 8001848:	2309      	movs	r3, #9
 800184a:	6033      	str	r3, [r6, #0]
 800184c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001850:	81a3      	strh	r3, [r4, #12]
 8001852:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001856:	e03e      	b.n	80018d6 <__swsetup_r+0xba>
 8001858:	4b25      	ldr	r3, [pc, #148]	; (80018f0 <__swsetup_r+0xd4>)
 800185a:	429c      	cmp	r4, r3
 800185c:	d101      	bne.n	8001862 <__swsetup_r+0x46>
 800185e:	68ac      	ldr	r4, [r5, #8]
 8001860:	e7eb      	b.n	800183a <__swsetup_r+0x1e>
 8001862:	4b24      	ldr	r3, [pc, #144]	; (80018f4 <__swsetup_r+0xd8>)
 8001864:	429c      	cmp	r4, r3
 8001866:	bf08      	it	eq
 8001868:	68ec      	ldreq	r4, [r5, #12]
 800186a:	e7e6      	b.n	800183a <__swsetup_r+0x1e>
 800186c:	0758      	lsls	r0, r3, #29
 800186e:	d512      	bpl.n	8001896 <__swsetup_r+0x7a>
 8001870:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001872:	b141      	cbz	r1, 8001886 <__swsetup_r+0x6a>
 8001874:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001878:	4299      	cmp	r1, r3
 800187a:	d002      	beq.n	8001882 <__swsetup_r+0x66>
 800187c:	4630      	mov	r0, r6
 800187e:	f000 f991 	bl	8001ba4 <_free_r>
 8001882:	2300      	movs	r3, #0
 8001884:	6363      	str	r3, [r4, #52]	; 0x34
 8001886:	89a3      	ldrh	r3, [r4, #12]
 8001888:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800188c:	81a3      	strh	r3, [r4, #12]
 800188e:	2300      	movs	r3, #0
 8001890:	6063      	str	r3, [r4, #4]
 8001892:	6923      	ldr	r3, [r4, #16]
 8001894:	6023      	str	r3, [r4, #0]
 8001896:	89a3      	ldrh	r3, [r4, #12]
 8001898:	f043 0308 	orr.w	r3, r3, #8
 800189c:	81a3      	strh	r3, [r4, #12]
 800189e:	6923      	ldr	r3, [r4, #16]
 80018a0:	b94b      	cbnz	r3, 80018b6 <__swsetup_r+0x9a>
 80018a2:	89a3      	ldrh	r3, [r4, #12]
 80018a4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80018a8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80018ac:	d003      	beq.n	80018b6 <__swsetup_r+0x9a>
 80018ae:	4621      	mov	r1, r4
 80018b0:	4630      	mov	r0, r6
 80018b2:	f000 f92b 	bl	8001b0c <__smakebuf_r>
 80018b6:	89a0      	ldrh	r0, [r4, #12]
 80018b8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80018bc:	f010 0301 	ands.w	r3, r0, #1
 80018c0:	d00a      	beq.n	80018d8 <__swsetup_r+0xbc>
 80018c2:	2300      	movs	r3, #0
 80018c4:	60a3      	str	r3, [r4, #8]
 80018c6:	6963      	ldr	r3, [r4, #20]
 80018c8:	425b      	negs	r3, r3
 80018ca:	61a3      	str	r3, [r4, #24]
 80018cc:	6923      	ldr	r3, [r4, #16]
 80018ce:	b943      	cbnz	r3, 80018e2 <__swsetup_r+0xc6>
 80018d0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80018d4:	d1ba      	bne.n	800184c <__swsetup_r+0x30>
 80018d6:	bd70      	pop	{r4, r5, r6, pc}
 80018d8:	0781      	lsls	r1, r0, #30
 80018da:	bf58      	it	pl
 80018dc:	6963      	ldrpl	r3, [r4, #20]
 80018de:	60a3      	str	r3, [r4, #8]
 80018e0:	e7f4      	b.n	80018cc <__swsetup_r+0xb0>
 80018e2:	2000      	movs	r0, #0
 80018e4:	e7f7      	b.n	80018d6 <__swsetup_r+0xba>
 80018e6:	bf00      	nop
 80018e8:	20000000 	.word	0x20000000
 80018ec:	08001cf8 	.word	0x08001cf8
 80018f0:	08001d18 	.word	0x08001d18
 80018f4:	08001cd8 	.word	0x08001cd8

080018f8 <_close_r>:
 80018f8:	b538      	push	{r3, r4, r5, lr}
 80018fa:	4d06      	ldr	r5, [pc, #24]	; (8001914 <_close_r+0x1c>)
 80018fc:	2300      	movs	r3, #0
 80018fe:	4604      	mov	r4, r0
 8001900:	4608      	mov	r0, r1
 8001902:	602b      	str	r3, [r5, #0]
 8001904:	f7ff f8cb 	bl	8000a9e <_close>
 8001908:	1c43      	adds	r3, r0, #1
 800190a:	d102      	bne.n	8001912 <_close_r+0x1a>
 800190c:	682b      	ldr	r3, [r5, #0]
 800190e:	b103      	cbz	r3, 8001912 <_close_r+0x1a>
 8001910:	6023      	str	r3, [r4, #0]
 8001912:	bd38      	pop	{r3, r4, r5, pc}
 8001914:	20000098 	.word	0x20000098

08001918 <__sflush_r>:
 8001918:	898a      	ldrh	r2, [r1, #12]
 800191a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800191e:	4605      	mov	r5, r0
 8001920:	0710      	lsls	r0, r2, #28
 8001922:	460c      	mov	r4, r1
 8001924:	d458      	bmi.n	80019d8 <__sflush_r+0xc0>
 8001926:	684b      	ldr	r3, [r1, #4]
 8001928:	2b00      	cmp	r3, #0
 800192a:	dc05      	bgt.n	8001938 <__sflush_r+0x20>
 800192c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800192e:	2b00      	cmp	r3, #0
 8001930:	dc02      	bgt.n	8001938 <__sflush_r+0x20>
 8001932:	2000      	movs	r0, #0
 8001934:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001938:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800193a:	2e00      	cmp	r6, #0
 800193c:	d0f9      	beq.n	8001932 <__sflush_r+0x1a>
 800193e:	2300      	movs	r3, #0
 8001940:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001944:	682f      	ldr	r7, [r5, #0]
 8001946:	602b      	str	r3, [r5, #0]
 8001948:	d032      	beq.n	80019b0 <__sflush_r+0x98>
 800194a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800194c:	89a3      	ldrh	r3, [r4, #12]
 800194e:	075a      	lsls	r2, r3, #29
 8001950:	d505      	bpl.n	800195e <__sflush_r+0x46>
 8001952:	6863      	ldr	r3, [r4, #4]
 8001954:	1ac0      	subs	r0, r0, r3
 8001956:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001958:	b10b      	cbz	r3, 800195e <__sflush_r+0x46>
 800195a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800195c:	1ac0      	subs	r0, r0, r3
 800195e:	2300      	movs	r3, #0
 8001960:	4602      	mov	r2, r0
 8001962:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001964:	6a21      	ldr	r1, [r4, #32]
 8001966:	4628      	mov	r0, r5
 8001968:	47b0      	blx	r6
 800196a:	1c43      	adds	r3, r0, #1
 800196c:	89a3      	ldrh	r3, [r4, #12]
 800196e:	d106      	bne.n	800197e <__sflush_r+0x66>
 8001970:	6829      	ldr	r1, [r5, #0]
 8001972:	291d      	cmp	r1, #29
 8001974:	d82c      	bhi.n	80019d0 <__sflush_r+0xb8>
 8001976:	4a2a      	ldr	r2, [pc, #168]	; (8001a20 <__sflush_r+0x108>)
 8001978:	40ca      	lsrs	r2, r1
 800197a:	07d6      	lsls	r6, r2, #31
 800197c:	d528      	bpl.n	80019d0 <__sflush_r+0xb8>
 800197e:	2200      	movs	r2, #0
 8001980:	6062      	str	r2, [r4, #4]
 8001982:	04d9      	lsls	r1, r3, #19
 8001984:	6922      	ldr	r2, [r4, #16]
 8001986:	6022      	str	r2, [r4, #0]
 8001988:	d504      	bpl.n	8001994 <__sflush_r+0x7c>
 800198a:	1c42      	adds	r2, r0, #1
 800198c:	d101      	bne.n	8001992 <__sflush_r+0x7a>
 800198e:	682b      	ldr	r3, [r5, #0]
 8001990:	b903      	cbnz	r3, 8001994 <__sflush_r+0x7c>
 8001992:	6560      	str	r0, [r4, #84]	; 0x54
 8001994:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001996:	602f      	str	r7, [r5, #0]
 8001998:	2900      	cmp	r1, #0
 800199a:	d0ca      	beq.n	8001932 <__sflush_r+0x1a>
 800199c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80019a0:	4299      	cmp	r1, r3
 80019a2:	d002      	beq.n	80019aa <__sflush_r+0x92>
 80019a4:	4628      	mov	r0, r5
 80019a6:	f000 f8fd 	bl	8001ba4 <_free_r>
 80019aa:	2000      	movs	r0, #0
 80019ac:	6360      	str	r0, [r4, #52]	; 0x34
 80019ae:	e7c1      	b.n	8001934 <__sflush_r+0x1c>
 80019b0:	6a21      	ldr	r1, [r4, #32]
 80019b2:	2301      	movs	r3, #1
 80019b4:	4628      	mov	r0, r5
 80019b6:	47b0      	blx	r6
 80019b8:	1c41      	adds	r1, r0, #1
 80019ba:	d1c7      	bne.n	800194c <__sflush_r+0x34>
 80019bc:	682b      	ldr	r3, [r5, #0]
 80019be:	2b00      	cmp	r3, #0
 80019c0:	d0c4      	beq.n	800194c <__sflush_r+0x34>
 80019c2:	2b1d      	cmp	r3, #29
 80019c4:	d001      	beq.n	80019ca <__sflush_r+0xb2>
 80019c6:	2b16      	cmp	r3, #22
 80019c8:	d101      	bne.n	80019ce <__sflush_r+0xb6>
 80019ca:	602f      	str	r7, [r5, #0]
 80019cc:	e7b1      	b.n	8001932 <__sflush_r+0x1a>
 80019ce:	89a3      	ldrh	r3, [r4, #12]
 80019d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80019d4:	81a3      	strh	r3, [r4, #12]
 80019d6:	e7ad      	b.n	8001934 <__sflush_r+0x1c>
 80019d8:	690f      	ldr	r7, [r1, #16]
 80019da:	2f00      	cmp	r7, #0
 80019dc:	d0a9      	beq.n	8001932 <__sflush_r+0x1a>
 80019de:	0793      	lsls	r3, r2, #30
 80019e0:	680e      	ldr	r6, [r1, #0]
 80019e2:	bf08      	it	eq
 80019e4:	694b      	ldreq	r3, [r1, #20]
 80019e6:	600f      	str	r7, [r1, #0]
 80019e8:	bf18      	it	ne
 80019ea:	2300      	movne	r3, #0
 80019ec:	eba6 0807 	sub.w	r8, r6, r7
 80019f0:	608b      	str	r3, [r1, #8]
 80019f2:	f1b8 0f00 	cmp.w	r8, #0
 80019f6:	dd9c      	ble.n	8001932 <__sflush_r+0x1a>
 80019f8:	6a21      	ldr	r1, [r4, #32]
 80019fa:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80019fc:	4643      	mov	r3, r8
 80019fe:	463a      	mov	r2, r7
 8001a00:	4628      	mov	r0, r5
 8001a02:	47b0      	blx	r6
 8001a04:	2800      	cmp	r0, #0
 8001a06:	dc06      	bgt.n	8001a16 <__sflush_r+0xfe>
 8001a08:	89a3      	ldrh	r3, [r4, #12]
 8001a0a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001a0e:	81a3      	strh	r3, [r4, #12]
 8001a10:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001a14:	e78e      	b.n	8001934 <__sflush_r+0x1c>
 8001a16:	4407      	add	r7, r0
 8001a18:	eba8 0800 	sub.w	r8, r8, r0
 8001a1c:	e7e9      	b.n	80019f2 <__sflush_r+0xda>
 8001a1e:	bf00      	nop
 8001a20:	20400001 	.word	0x20400001

08001a24 <_fflush_r>:
 8001a24:	b538      	push	{r3, r4, r5, lr}
 8001a26:	690b      	ldr	r3, [r1, #16]
 8001a28:	4605      	mov	r5, r0
 8001a2a:	460c      	mov	r4, r1
 8001a2c:	b913      	cbnz	r3, 8001a34 <_fflush_r+0x10>
 8001a2e:	2500      	movs	r5, #0
 8001a30:	4628      	mov	r0, r5
 8001a32:	bd38      	pop	{r3, r4, r5, pc}
 8001a34:	b118      	cbz	r0, 8001a3e <_fflush_r+0x1a>
 8001a36:	6983      	ldr	r3, [r0, #24]
 8001a38:	b90b      	cbnz	r3, 8001a3e <_fflush_r+0x1a>
 8001a3a:	f7ff fa15 	bl	8000e68 <__sinit>
 8001a3e:	4b14      	ldr	r3, [pc, #80]	; (8001a90 <_fflush_r+0x6c>)
 8001a40:	429c      	cmp	r4, r3
 8001a42:	d11b      	bne.n	8001a7c <_fflush_r+0x58>
 8001a44:	686c      	ldr	r4, [r5, #4]
 8001a46:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001a4a:	2b00      	cmp	r3, #0
 8001a4c:	d0ef      	beq.n	8001a2e <_fflush_r+0xa>
 8001a4e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001a50:	07d0      	lsls	r0, r2, #31
 8001a52:	d404      	bmi.n	8001a5e <_fflush_r+0x3a>
 8001a54:	0599      	lsls	r1, r3, #22
 8001a56:	d402      	bmi.n	8001a5e <_fflush_r+0x3a>
 8001a58:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001a5a:	f7ff faa3 	bl	8000fa4 <__retarget_lock_acquire_recursive>
 8001a5e:	4628      	mov	r0, r5
 8001a60:	4621      	mov	r1, r4
 8001a62:	f7ff ff59 	bl	8001918 <__sflush_r>
 8001a66:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001a68:	07da      	lsls	r2, r3, #31
 8001a6a:	4605      	mov	r5, r0
 8001a6c:	d4e0      	bmi.n	8001a30 <_fflush_r+0xc>
 8001a6e:	89a3      	ldrh	r3, [r4, #12]
 8001a70:	059b      	lsls	r3, r3, #22
 8001a72:	d4dd      	bmi.n	8001a30 <_fflush_r+0xc>
 8001a74:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001a76:	f7ff fa96 	bl	8000fa6 <__retarget_lock_release_recursive>
 8001a7a:	e7d9      	b.n	8001a30 <_fflush_r+0xc>
 8001a7c:	4b05      	ldr	r3, [pc, #20]	; (8001a94 <_fflush_r+0x70>)
 8001a7e:	429c      	cmp	r4, r3
 8001a80:	d101      	bne.n	8001a86 <_fflush_r+0x62>
 8001a82:	68ac      	ldr	r4, [r5, #8]
 8001a84:	e7df      	b.n	8001a46 <_fflush_r+0x22>
 8001a86:	4b04      	ldr	r3, [pc, #16]	; (8001a98 <_fflush_r+0x74>)
 8001a88:	429c      	cmp	r4, r3
 8001a8a:	bf08      	it	eq
 8001a8c:	68ec      	ldreq	r4, [r5, #12]
 8001a8e:	e7da      	b.n	8001a46 <_fflush_r+0x22>
 8001a90:	08001cf8 	.word	0x08001cf8
 8001a94:	08001d18 	.word	0x08001d18
 8001a98:	08001cd8 	.word	0x08001cd8

08001a9c <_lseek_r>:
 8001a9c:	b538      	push	{r3, r4, r5, lr}
 8001a9e:	4d07      	ldr	r5, [pc, #28]	; (8001abc <_lseek_r+0x20>)
 8001aa0:	4604      	mov	r4, r0
 8001aa2:	4608      	mov	r0, r1
 8001aa4:	4611      	mov	r1, r2
 8001aa6:	2200      	movs	r2, #0
 8001aa8:	602a      	str	r2, [r5, #0]
 8001aaa:	461a      	mov	r2, r3
 8001aac:	f7ff f81e 	bl	8000aec <_lseek>
 8001ab0:	1c43      	adds	r3, r0, #1
 8001ab2:	d102      	bne.n	8001aba <_lseek_r+0x1e>
 8001ab4:	682b      	ldr	r3, [r5, #0]
 8001ab6:	b103      	cbz	r3, 8001aba <_lseek_r+0x1e>
 8001ab8:	6023      	str	r3, [r4, #0]
 8001aba:	bd38      	pop	{r3, r4, r5, pc}
 8001abc:	20000098 	.word	0x20000098

08001ac0 <__swhatbuf_r>:
 8001ac0:	b570      	push	{r4, r5, r6, lr}
 8001ac2:	460e      	mov	r6, r1
 8001ac4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001ac8:	2900      	cmp	r1, #0
 8001aca:	b096      	sub	sp, #88	; 0x58
 8001acc:	4614      	mov	r4, r2
 8001ace:	461d      	mov	r5, r3
 8001ad0:	da08      	bge.n	8001ae4 <__swhatbuf_r+0x24>
 8001ad2:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8001ad6:	2200      	movs	r2, #0
 8001ad8:	602a      	str	r2, [r5, #0]
 8001ada:	061a      	lsls	r2, r3, #24
 8001adc:	d410      	bmi.n	8001b00 <__swhatbuf_r+0x40>
 8001ade:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001ae2:	e00e      	b.n	8001b02 <__swhatbuf_r+0x42>
 8001ae4:	466a      	mov	r2, sp
 8001ae6:	f000 f8bb 	bl	8001c60 <_fstat_r>
 8001aea:	2800      	cmp	r0, #0
 8001aec:	dbf1      	blt.n	8001ad2 <__swhatbuf_r+0x12>
 8001aee:	9a01      	ldr	r2, [sp, #4]
 8001af0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001af4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001af8:	425a      	negs	r2, r3
 8001afa:	415a      	adcs	r2, r3
 8001afc:	602a      	str	r2, [r5, #0]
 8001afe:	e7ee      	b.n	8001ade <__swhatbuf_r+0x1e>
 8001b00:	2340      	movs	r3, #64	; 0x40
 8001b02:	2000      	movs	r0, #0
 8001b04:	6023      	str	r3, [r4, #0]
 8001b06:	b016      	add	sp, #88	; 0x58
 8001b08:	bd70      	pop	{r4, r5, r6, pc}
	...

08001b0c <__smakebuf_r>:
 8001b0c:	898b      	ldrh	r3, [r1, #12]
 8001b0e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001b10:	079d      	lsls	r5, r3, #30
 8001b12:	4606      	mov	r6, r0
 8001b14:	460c      	mov	r4, r1
 8001b16:	d507      	bpl.n	8001b28 <__smakebuf_r+0x1c>
 8001b18:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001b1c:	6023      	str	r3, [r4, #0]
 8001b1e:	6123      	str	r3, [r4, #16]
 8001b20:	2301      	movs	r3, #1
 8001b22:	6163      	str	r3, [r4, #20]
 8001b24:	b002      	add	sp, #8
 8001b26:	bd70      	pop	{r4, r5, r6, pc}
 8001b28:	ab01      	add	r3, sp, #4
 8001b2a:	466a      	mov	r2, sp
 8001b2c:	f7ff ffc8 	bl	8001ac0 <__swhatbuf_r>
 8001b30:	9900      	ldr	r1, [sp, #0]
 8001b32:	4605      	mov	r5, r0
 8001b34:	4630      	mov	r0, r6
 8001b36:	f7ff fa57 	bl	8000fe8 <_malloc_r>
 8001b3a:	b948      	cbnz	r0, 8001b50 <__smakebuf_r+0x44>
 8001b3c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001b40:	059a      	lsls	r2, r3, #22
 8001b42:	d4ef      	bmi.n	8001b24 <__smakebuf_r+0x18>
 8001b44:	f023 0303 	bic.w	r3, r3, #3
 8001b48:	f043 0302 	orr.w	r3, r3, #2
 8001b4c:	81a3      	strh	r3, [r4, #12]
 8001b4e:	e7e3      	b.n	8001b18 <__smakebuf_r+0xc>
 8001b50:	4b0d      	ldr	r3, [pc, #52]	; (8001b88 <__smakebuf_r+0x7c>)
 8001b52:	62b3      	str	r3, [r6, #40]	; 0x28
 8001b54:	89a3      	ldrh	r3, [r4, #12]
 8001b56:	6020      	str	r0, [r4, #0]
 8001b58:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001b5c:	81a3      	strh	r3, [r4, #12]
 8001b5e:	9b00      	ldr	r3, [sp, #0]
 8001b60:	6163      	str	r3, [r4, #20]
 8001b62:	9b01      	ldr	r3, [sp, #4]
 8001b64:	6120      	str	r0, [r4, #16]
 8001b66:	b15b      	cbz	r3, 8001b80 <__smakebuf_r+0x74>
 8001b68:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001b6c:	4630      	mov	r0, r6
 8001b6e:	f000 f889 	bl	8001c84 <_isatty_r>
 8001b72:	b128      	cbz	r0, 8001b80 <__smakebuf_r+0x74>
 8001b74:	89a3      	ldrh	r3, [r4, #12]
 8001b76:	f023 0303 	bic.w	r3, r3, #3
 8001b7a:	f043 0301 	orr.w	r3, r3, #1
 8001b7e:	81a3      	strh	r3, [r4, #12]
 8001b80:	89a0      	ldrh	r0, [r4, #12]
 8001b82:	4305      	orrs	r5, r0
 8001b84:	81a5      	strh	r5, [r4, #12]
 8001b86:	e7cd      	b.n	8001b24 <__smakebuf_r+0x18>
 8001b88:	08000e01 	.word	0x08000e01

08001b8c <__malloc_lock>:
 8001b8c:	4801      	ldr	r0, [pc, #4]	; (8001b94 <__malloc_lock+0x8>)
 8001b8e:	f7ff ba09 	b.w	8000fa4 <__retarget_lock_acquire_recursive>
 8001b92:	bf00      	nop
 8001b94:	2000008c 	.word	0x2000008c

08001b98 <__malloc_unlock>:
 8001b98:	4801      	ldr	r0, [pc, #4]	; (8001ba0 <__malloc_unlock+0x8>)
 8001b9a:	f7ff ba04 	b.w	8000fa6 <__retarget_lock_release_recursive>
 8001b9e:	bf00      	nop
 8001ba0:	2000008c 	.word	0x2000008c

08001ba4 <_free_r>:
 8001ba4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001ba6:	2900      	cmp	r1, #0
 8001ba8:	d044      	beq.n	8001c34 <_free_r+0x90>
 8001baa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001bae:	9001      	str	r0, [sp, #4]
 8001bb0:	2b00      	cmp	r3, #0
 8001bb2:	f1a1 0404 	sub.w	r4, r1, #4
 8001bb6:	bfb8      	it	lt
 8001bb8:	18e4      	addlt	r4, r4, r3
 8001bba:	f7ff ffe7 	bl	8001b8c <__malloc_lock>
 8001bbe:	4a1e      	ldr	r2, [pc, #120]	; (8001c38 <_free_r+0x94>)
 8001bc0:	9801      	ldr	r0, [sp, #4]
 8001bc2:	6813      	ldr	r3, [r2, #0]
 8001bc4:	b933      	cbnz	r3, 8001bd4 <_free_r+0x30>
 8001bc6:	6063      	str	r3, [r4, #4]
 8001bc8:	6014      	str	r4, [r2, #0]
 8001bca:	b003      	add	sp, #12
 8001bcc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001bd0:	f7ff bfe2 	b.w	8001b98 <__malloc_unlock>
 8001bd4:	42a3      	cmp	r3, r4
 8001bd6:	d908      	bls.n	8001bea <_free_r+0x46>
 8001bd8:	6825      	ldr	r5, [r4, #0]
 8001bda:	1961      	adds	r1, r4, r5
 8001bdc:	428b      	cmp	r3, r1
 8001bde:	bf01      	itttt	eq
 8001be0:	6819      	ldreq	r1, [r3, #0]
 8001be2:	685b      	ldreq	r3, [r3, #4]
 8001be4:	1949      	addeq	r1, r1, r5
 8001be6:	6021      	streq	r1, [r4, #0]
 8001be8:	e7ed      	b.n	8001bc6 <_free_r+0x22>
 8001bea:	461a      	mov	r2, r3
 8001bec:	685b      	ldr	r3, [r3, #4]
 8001bee:	b10b      	cbz	r3, 8001bf4 <_free_r+0x50>
 8001bf0:	42a3      	cmp	r3, r4
 8001bf2:	d9fa      	bls.n	8001bea <_free_r+0x46>
 8001bf4:	6811      	ldr	r1, [r2, #0]
 8001bf6:	1855      	adds	r5, r2, r1
 8001bf8:	42a5      	cmp	r5, r4
 8001bfa:	d10b      	bne.n	8001c14 <_free_r+0x70>
 8001bfc:	6824      	ldr	r4, [r4, #0]
 8001bfe:	4421      	add	r1, r4
 8001c00:	1854      	adds	r4, r2, r1
 8001c02:	42a3      	cmp	r3, r4
 8001c04:	6011      	str	r1, [r2, #0]
 8001c06:	d1e0      	bne.n	8001bca <_free_r+0x26>
 8001c08:	681c      	ldr	r4, [r3, #0]
 8001c0a:	685b      	ldr	r3, [r3, #4]
 8001c0c:	6053      	str	r3, [r2, #4]
 8001c0e:	4421      	add	r1, r4
 8001c10:	6011      	str	r1, [r2, #0]
 8001c12:	e7da      	b.n	8001bca <_free_r+0x26>
 8001c14:	d902      	bls.n	8001c1c <_free_r+0x78>
 8001c16:	230c      	movs	r3, #12
 8001c18:	6003      	str	r3, [r0, #0]
 8001c1a:	e7d6      	b.n	8001bca <_free_r+0x26>
 8001c1c:	6825      	ldr	r5, [r4, #0]
 8001c1e:	1961      	adds	r1, r4, r5
 8001c20:	428b      	cmp	r3, r1
 8001c22:	bf04      	itt	eq
 8001c24:	6819      	ldreq	r1, [r3, #0]
 8001c26:	685b      	ldreq	r3, [r3, #4]
 8001c28:	6063      	str	r3, [r4, #4]
 8001c2a:	bf04      	itt	eq
 8001c2c:	1949      	addeq	r1, r1, r5
 8001c2e:	6021      	streq	r1, [r4, #0]
 8001c30:	6054      	str	r4, [r2, #4]
 8001c32:	e7ca      	b.n	8001bca <_free_r+0x26>
 8001c34:	b003      	add	sp, #12
 8001c36:	bd30      	pop	{r4, r5, pc}
 8001c38:	20000090 	.word	0x20000090

08001c3c <_read_r>:
 8001c3c:	b538      	push	{r3, r4, r5, lr}
 8001c3e:	4d07      	ldr	r5, [pc, #28]	; (8001c5c <_read_r+0x20>)
 8001c40:	4604      	mov	r4, r0
 8001c42:	4608      	mov	r0, r1
 8001c44:	4611      	mov	r1, r2
 8001c46:	2200      	movs	r2, #0
 8001c48:	602a      	str	r2, [r5, #0]
 8001c4a:	461a      	mov	r2, r3
 8001c4c:	f7fe feee 	bl	8000a2c <_read>
 8001c50:	1c43      	adds	r3, r0, #1
 8001c52:	d102      	bne.n	8001c5a <_read_r+0x1e>
 8001c54:	682b      	ldr	r3, [r5, #0]
 8001c56:	b103      	cbz	r3, 8001c5a <_read_r+0x1e>
 8001c58:	6023      	str	r3, [r4, #0]
 8001c5a:	bd38      	pop	{r3, r4, r5, pc}
 8001c5c:	20000098 	.word	0x20000098

08001c60 <_fstat_r>:
 8001c60:	b538      	push	{r3, r4, r5, lr}
 8001c62:	4d07      	ldr	r5, [pc, #28]	; (8001c80 <_fstat_r+0x20>)
 8001c64:	2300      	movs	r3, #0
 8001c66:	4604      	mov	r4, r0
 8001c68:	4608      	mov	r0, r1
 8001c6a:	4611      	mov	r1, r2
 8001c6c:	602b      	str	r3, [r5, #0]
 8001c6e:	f7fe ff22 	bl	8000ab6 <_fstat>
 8001c72:	1c43      	adds	r3, r0, #1
 8001c74:	d102      	bne.n	8001c7c <_fstat_r+0x1c>
 8001c76:	682b      	ldr	r3, [r5, #0]
 8001c78:	b103      	cbz	r3, 8001c7c <_fstat_r+0x1c>
 8001c7a:	6023      	str	r3, [r4, #0]
 8001c7c:	bd38      	pop	{r3, r4, r5, pc}
 8001c7e:	bf00      	nop
 8001c80:	20000098 	.word	0x20000098

08001c84 <_isatty_r>:
 8001c84:	b538      	push	{r3, r4, r5, lr}
 8001c86:	4d06      	ldr	r5, [pc, #24]	; (8001ca0 <_isatty_r+0x1c>)
 8001c88:	2300      	movs	r3, #0
 8001c8a:	4604      	mov	r4, r0
 8001c8c:	4608      	mov	r0, r1
 8001c8e:	602b      	str	r3, [r5, #0]
 8001c90:	f7fe ff21 	bl	8000ad6 <_isatty>
 8001c94:	1c43      	adds	r3, r0, #1
 8001c96:	d102      	bne.n	8001c9e <_isatty_r+0x1a>
 8001c98:	682b      	ldr	r3, [r5, #0]
 8001c9a:	b103      	cbz	r3, 8001c9e <_isatty_r+0x1a>
 8001c9c:	6023      	str	r3, [r4, #0]
 8001c9e:	bd38      	pop	{r3, r4, r5, pc}
 8001ca0:	20000098 	.word	0x20000098

08001ca4 <_init>:
 8001ca4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001ca6:	bf00      	nop
 8001ca8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001caa:	bc08      	pop	{r3}
 8001cac:	469e      	mov	lr, r3
 8001cae:	4770      	bx	lr

08001cb0 <_fini>:
 8001cb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001cb2:	bf00      	nop
 8001cb4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001cb6:	bc08      	pop	{r3}
 8001cb8:	469e      	mov	lr, r3
 8001cba:	4770      	bx	lr
